`include "cmos_cells_delay.v"
/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

module byte_joining_synth_delay(Lane_0, Lane_1, Lane_2, Lane_3, ctr_3, clk250k, ENB, out);
  input ENB;
  reg [7:0] L0;
  reg [7:0] L1;
  reg [7:0] L2;
  reg [7:0] L3;
  input [7:0] Lane_0;
  input [7:0] Lane_1;
  input [7:0] Lane_2;
  input [7:0] Lane_3;
  input clk250k;
  input [1:0] ctr_3;
  output [7:0] out;
  always @(posedge clk250k)
      L0[0] <= #15  Lane_0[0];
  always @(posedge clk250k)
      L0[1] <= #15  Lane_0[1];
  always @(posedge clk250k)
      L0[2] <= #15  Lane_0[2];
  always @(posedge clk250k)
      L0[3] <= #15  Lane_0[3];
  always @(posedge clk250k)
      L0[4] <= #15  Lane_0[4];
  always @(posedge clk250k)
      L0[5] <= #15  Lane_0[5];
  always @(posedge clk250k)
      L0[6] <= #15  Lane_0[6];
  always @(posedge clk250k)
      L0[7] <= #15  Lane_0[7];
  always @(posedge clk250k)
      L1[0] <= #15  Lane_1[0];
  always @(posedge clk250k)
      L1[1] <= #15  Lane_1[1];
  always @(posedge clk250k)
      L1[2] <= #15  Lane_1[2];
  always @(posedge clk250k)
      L1[3] <= #15  Lane_1[3];
  always @(posedge clk250k)
      L1[4] <= #15  Lane_1[4];
  always @(posedge clk250k)
      L1[5] <= #15  Lane_1[5];
  always @(posedge clk250k)
      L1[6] <= #15  Lane_1[6];
  always @(posedge clk250k)
      L1[7] <= #15  Lane_1[7];
  always @(posedge clk250k)
      L2[0] <= #15  Lane_2[0];
  always @(posedge clk250k)
      L2[1] <= #15  Lane_2[1];
  always @(posedge clk250k)
      L2[2] <= #15  Lane_2[2];
  always @(posedge clk250k)
      L2[3] <= #15  Lane_2[3];
  always @(posedge clk250k)
      L2[4] <= #15  Lane_2[4];
  always @(posedge clk250k)
      L2[5] <= #15  Lane_2[5];
  always @(posedge clk250k)
      L2[6] <= #15  Lane_2[6];
  always @(posedge clk250k)
      L2[7] <= #15  Lane_2[7];
  always @(posedge clk250k)
      L3[0] <= #15  Lane_3[0];
  always @(posedge clk250k)
      L3[1] <= #15  Lane_3[1];
  always @(posedge clk250k)
      L3[2] <= #15  Lane_3[2];
  always @(posedge clk250k)
      L3[3] <= #15  Lane_3[3];
  always @(posedge clk250k)
      L3[4] <= #15  Lane_3[4];
  always @(posedge clk250k)
      L3[5] <= #15  Lane_3[5];
  always @(posedge clk250k)
      L3[6] <= #15  Lane_3[6];
  always @(posedge clk250k)
      L3[7] <= #15  Lane_3[7];
  mux4a1_synth_delay mux_cond (
    .ENB(ENB),
    .In0(L0),
    .In1(L1),
    .In2(L2),
    .In3(L3),
    .Sel(ctr_3),
    .outmux(out)
  );
endmodule

module byte_striping_synth_delay(stripedLane0, stripedLane1, stripedLane2, stripedLane3, byteStripingVLD, byteStripingIN, laneVLD, clk250k, clk1Mhz, counter, reset, ENB);
  wire [7:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  input ENB;
  input [7:0] byteStripingIN;
  output byteStripingVLD;
  input clk1Mhz;
  input clk250k;
  output [1:0] counter;
  input laneVLD;
  input reset;
  output [7:0] stripedLane0;
  output [7:0] stripedLane1;
  output [7:0] stripedLane2;
  output [7:0] stripedLane3;
  reg [7:0] stripedLane3;
  NAND_delay _18_ (
    .A(laneVLD),
    .B(byteStripingIN[0]),
    .Y(_01_)
  );
  NOT_delay _19_ (
    .A(laneVLD),
    .Y(_02_)
  );
  NAND_delay _20_ (
    .A(_02_),
    .B(stripedLane3[0]),
    .Y(_03_)
  );
  NAND_delay _21_ (
    .A(_03_),
    .B(_01_),
    .Y(_00_[0])
  );
  NAND_delay _22_ (
    .A(byteStripingIN[1]),
    .B(laneVLD),
    .Y(_04_)
  );
  NAND_delay _23_ (
    .A(stripedLane3[1]),
    .B(_02_),
    .Y(_05_)
  );
  NAND_delay _24_ (
    .A(_05_),
    .B(_04_),
    .Y(_00_[1])
  );
  NAND_delay _25_ (
    .A(byteStripingIN[2]),
    .B(laneVLD),
    .Y(_06_)
  );
  NAND_delay _26_ (
    .A(stripedLane3[2]),
    .B(_02_),
    .Y(_07_)
  );
  NAND_delay _27_ (
    .A(_07_),
    .B(_06_),
    .Y(_00_[2])
  );
  NAND_delay _28_ (
    .A(byteStripingIN[3]),
    .B(laneVLD),
    .Y(_08_)
  );
  NAND_delay _29_ (
    .A(stripedLane3[3]),
    .B(_02_),
    .Y(_09_)
  );
  NAND_delay _30_ (
    .A(_09_),
    .B(_08_),
    .Y(_00_[3])
  );
  NAND_delay _31_ (
    .A(byteStripingIN[4]),
    .B(laneVLD),
    .Y(_10_)
  );
  NAND_delay _32_ (
    .A(stripedLane3[4]),
    .B(_02_),
    .Y(_11_)
  );
  NAND_delay _33_ (
    .A(_11_),
    .B(_10_),
    .Y(_00_[4])
  );
  NAND_delay _34_ (
    .A(byteStripingIN[5]),
    .B(laneVLD),
    .Y(_12_)
  );
  NAND_delay _35_ (
    .A(stripedLane3[5]),
    .B(_02_),
    .Y(_13_)
  );
  NAND_delay _36_ (
    .A(_13_),
    .B(_12_),
    .Y(_00_[5])
  );
  NAND_delay _37_ (
    .A(byteStripingIN[6]),
    .B(laneVLD),
    .Y(_14_)
  );
  NAND_delay _38_ (
    .A(stripedLane3[6]),
    .B(_02_),
    .Y(_15_)
  );
  NAND_delay _39_ (
    .A(_15_),
    .B(_14_),
    .Y(_00_[6])
  );
  NAND_delay _40_ (
    .A(byteStripingIN[7]),
    .B(laneVLD),
    .Y(_16_)
  );
  NAND_delay _41_ (
    .A(stripedLane3[7]),
    .B(_02_),
    .Y(_17_)
  );
  NAND_delay _42_ (
    .A(_17_),
    .B(_16_),
    .Y(_00_[7])
  );
  always @(posedge clk1Mhz)
      stripedLane3[0] <= #15  _00_[0];
  always @(posedge clk1Mhz)
      stripedLane3[1] <= #15  _00_[1];
  always @(posedge clk1Mhz)
      stripedLane3[2] <= #15  _00_[2];
  always @(posedge clk1Mhz)
      stripedLane3[3] <= #15  _00_[3];
  always @(posedge clk1Mhz)
      stripedLane3[4] <= #15  _00_[4];
  always @(posedge clk1Mhz)
      stripedLane3[5] <= #15  _00_[5];
  always @(posedge clk1Mhz)
      stripedLane3[6] <= #15  _00_[6];
  always @(posedge clk1Mhz)
      stripedLane3[7] <= #15  _00_[7];
  assign byteStripingVLD = 1'b1;
  assign counter = 2'b11;
endmodule

module ctr3_synth_delay(CLK, reset, CTR);
  wire [1:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  input CLK;
  output [1:0] CTR;
  reg [1:0] CTR;
  input reset;
  NAND_delay _05_ (
    .A(CTR[0]),
    .B(reset),
    .Y(_00_[0])
  );
  NOT_delay _06_ (
    .A(CTR[1]),
    .Y(_02_)
  );
  NAND_delay _07_ (
    .A(_02_),
    .B(CTR[0]),
    .Y(_03_)
  );
  NAND_delay _08_ (
    .A(_02_),
    .B(reset),
    .Y(_04_)
  );
  NAND_delay _09_ (
    .A(_04_),
    .B(_00_[0]),
    .Y(_01_)
  );
  NAND_delay _10_ (
    .A(_01_),
    .B(_03_),
    .Y(_00_[1])
  );
  always @(posedge CLK)
      CTR[0] <= #15  _00_[0];
  always @(posedge CLK)
      CTR[1] <= #15  _00_[1];
endmodule

module ffd_p2s_synth_delay(CLK, D, ENB, valid_in, Q, valid_out);
  input CLK;
  input D;
  input ENB;
  output Q;
  input valid_in;
  output valid_out;
  assign Q = 1'b0;
  assign valid_out = 1'b1;
endmodule

module ffd_s2p_synth_delay(CLK, D, ENB, Q);
  input CLK;
  input D;
  input ENB;
  output Q;
  assign Q = 1'b0;
endmodule

module multiplexer_synth_delay(muxOUT, muxVLD, TLP, COM, PAD, SKP, STP, SDP, END, EDB, FTS, IDL, muxCTRL, muxCLK, ENB);
  wire [7:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  input [7:0] COM;
  input [7:0] EDB;
  input ENB;
  input [7:0] END;
  input [7:0] FTS;
  input [7:0] IDL;
  input [7:0] PAD;
  input [7:0] SDP;
  input [7:0] SKP;
  input [7:0] STP;
  input [7:0] TLP;
  input muxCLK;
  input [3:0] muxCTRL;
  output [7:0] muxOUT;
  reg [7:0] muxOUT;
  output muxVLD;
  reg muxVLD;
  NOT_delay _237_ (
    .A(ENB),
    .Y(_002_)
  );
  NOT_delay _238_ (
    .A(muxCTRL[3]),
    .Y(_003_)
  );
  NOR_delay _239_ (
    .A(muxCTRL[1]),
    .B(muxCTRL[2]),
    .Y(_004_)
  );
  NOR_delay _240_ (
    .A(_004_),
    .B(_003_),
    .Y(_005_)
  );
  NOR_delay _241_ (
    .A(_005_),
    .B(_002_),
    .Y(_001_)
  );
  NAND_delay _242_ (
    .A(_003_),
    .B(muxCTRL[2]),
    .Y(_006_)
  );
  NOT_delay _243_ (
    .A(muxCTRL[0]),
    .Y(_007_)
  );
  NOT_delay _244_ (
    .A(muxCTRL[1]),
    .Y(_008_)
  );
  NAND_delay _245_ (
    .A(_008_),
    .B(_007_),
    .Y(_009_)
  );
  NOR_delay _246_ (
    .A(_009_),
    .B(_006_),
    .Y(_010_)
  );
  NAND_delay _247_ (
    .A(_010_),
    .B(STP[0]),
    .Y(_011_)
  );
  NOT_delay _248_ (
    .A(SDP[0]),
    .Y(_012_)
  );
  NOT_delay _249_ (
    .A(muxCTRL[2]),
    .Y(_013_)
  );
  NOR_delay _250_ (
    .A(muxCTRL[3]),
    .B(_013_),
    .Y(_014_)
  );
  NOR_delay _251_ (
    .A(muxCTRL[1]),
    .B(_007_),
    .Y(_015_)
  );
  NAND_delay _252_ (
    .A(_015_),
    .B(_014_),
    .Y(_016_)
  );
  NOR_delay _253_ (
    .A(_016_),
    .B(_012_),
    .Y(_017_)
  );
  NOT_delay _254_ (
    .A(COM[0]),
    .Y(_018_)
  );
  NOR_delay _255_ (
    .A(muxCTRL[3]),
    .B(muxCTRL[2]),
    .Y(_019_)
  );
  NAND_delay _256_ (
    .A(_019_),
    .B(_015_),
    .Y(_020_)
  );
  NOR_delay _257_ (
    .A(_020_),
    .B(_018_),
    .Y(_021_)
  );
  NOR_delay _258_ (
    .A(_021_),
    .B(_017_),
    .Y(_022_)
  );
  NAND_delay _259_ (
    .A(_022_),
    .B(_011_),
    .Y(_023_)
  );
  NAND_delay _260_ (
    .A(_008_),
    .B(muxCTRL[0]),
    .Y(_024_)
  );
  NAND_delay _261_ (
    .A(muxCTRL[3]),
    .B(_013_),
    .Y(_025_)
  );
  NOR_delay _262_ (
    .A(_025_),
    .B(_024_),
    .Y(_026_)
  );
  NAND_delay _263_ (
    .A(_026_),
    .B(IDL[0]),
    .Y(_027_)
  );
  NAND_delay _264_ (
    .A(muxCTRL[1]),
    .B(_007_),
    .Y(_028_)
  );
  NOR_delay _265_ (
    .A(_028_),
    .B(_006_),
    .Y(_029_)
  );
  NAND_delay _266_ (
    .A(_029_),
    .B(END[0]),
    .Y(_030_)
  );
  NAND_delay _267_ (
    .A(_030_),
    .B(_027_),
    .Y(_031_)
  );
  NAND_delay _268_ (
    .A(muxCTRL[1]),
    .B(muxCTRL[0]),
    .Y(_032_)
  );
  NOR_delay _269_ (
    .A(_032_),
    .B(_006_),
    .Y(_033_)
  );
  NAND_delay _270_ (
    .A(_033_),
    .B(EDB[0]),
    .Y(_034_)
  );
  NOR_delay _271_ (
    .A(_025_),
    .B(_009_),
    .Y(_035_)
  );
  NAND_delay _272_ (
    .A(_035_),
    .B(FTS[0]),
    .Y(_036_)
  );
  NAND_delay _273_ (
    .A(_036_),
    .B(_034_),
    .Y(_037_)
  );
  NOR_delay _274_ (
    .A(_037_),
    .B(_031_),
    .Y(_038_)
  );
  NOT_delay _275_ (
    .A(_005_),
    .Y(_039_)
  );
  NAND_delay _276_ (
    .A(_003_),
    .B(_013_),
    .Y(_040_)
  );
  NOR_delay _277_ (
    .A(_040_),
    .B(_009_),
    .Y(_041_)
  );
  NAND_delay _278_ (
    .A(_041_),
    .B(TLP[0]),
    .Y(_042_)
  );
  NAND_delay _279_ (
    .A(_042_),
    .B(_039_),
    .Y(_043_)
  );
  NOR_delay _280_ (
    .A(_032_),
    .B(_040_),
    .Y(_044_)
  );
  NAND_delay _281_ (
    .A(_044_),
    .B(SKP[0]),
    .Y(_045_)
  );
  NOR_delay _282_ (
    .A(_028_),
    .B(_040_),
    .Y(_046_)
  );
  NAND_delay _283_ (
    .A(_046_),
    .B(PAD[0]),
    .Y(_047_)
  );
  NAND_delay _284_ (
    .A(_047_),
    .B(_045_),
    .Y(_048_)
  );
  NOR_delay _285_ (
    .A(_048_),
    .B(_043_),
    .Y(_049_)
  );
  NAND_delay _286_ (
    .A(_049_),
    .B(_038_),
    .Y(_050_)
  );
  NOR_delay _287_ (
    .A(_050_),
    .B(_023_),
    .Y(_051_)
  );
  NOT_delay _288_ (
    .A(muxOUT[0]),
    .Y(_052_)
  );
  NAND_delay _289_ (
    .A(_005_),
    .B(_052_),
    .Y(_053_)
  );
  NAND_delay _290_ (
    .A(_053_),
    .B(ENB),
    .Y(_054_)
  );
  NOR_delay _291_ (
    .A(_054_),
    .B(_051_),
    .Y(_000_[0])
  );
  NAND_delay _292_ (
    .A(_010_),
    .B(STP[1]),
    .Y(_055_)
  );
  NOT_delay _293_ (
    .A(SDP[1]),
    .Y(_056_)
  );
  NOR_delay _294_ (
    .A(_016_),
    .B(_056_),
    .Y(_057_)
  );
  NOT_delay _295_ (
    .A(TLP[1]),
    .Y(_058_)
  );
  NOR_delay _296_ (
    .A(muxCTRL[1]),
    .B(muxCTRL[0]),
    .Y(_059_)
  );
  NAND_delay _297_ (
    .A(_019_),
    .B(_059_),
    .Y(_060_)
  );
  NOR_delay _298_ (
    .A(_060_),
    .B(_058_),
    .Y(_061_)
  );
  NOR_delay _299_ (
    .A(_061_),
    .B(_057_),
    .Y(_062_)
  );
  NAND_delay _300_ (
    .A(_062_),
    .B(_055_),
    .Y(_063_)
  );
  NAND_delay _301_ (
    .A(_026_),
    .B(IDL[1]),
    .Y(_064_)
  );
  NAND_delay _302_ (
    .A(_029_),
    .B(END[1]),
    .Y(_065_)
  );
  NAND_delay _303_ (
    .A(_065_),
    .B(_064_),
    .Y(_066_)
  );
  NAND_delay _304_ (
    .A(_033_),
    .B(EDB[1]),
    .Y(_067_)
  );
  NAND_delay _305_ (
    .A(_035_),
    .B(FTS[1]),
    .Y(_068_)
  );
  NAND_delay _306_ (
    .A(_068_),
    .B(_067_),
    .Y(_069_)
  );
  NOR_delay _307_ (
    .A(_069_),
    .B(_066_),
    .Y(_070_)
  );
  NOR_delay _308_ (
    .A(_040_),
    .B(_024_),
    .Y(_071_)
  );
  NAND_delay _309_ (
    .A(_071_),
    .B(COM[1]),
    .Y(_072_)
  );
  NAND_delay _310_ (
    .A(_072_),
    .B(_039_),
    .Y(_073_)
  );
  NAND_delay _311_ (
    .A(_044_),
    .B(SKP[1]),
    .Y(_074_)
  );
  NAND_delay _312_ (
    .A(_046_),
    .B(PAD[1]),
    .Y(_075_)
  );
  NAND_delay _313_ (
    .A(_075_),
    .B(_074_),
    .Y(_076_)
  );
  NOR_delay _314_ (
    .A(_076_),
    .B(_073_),
    .Y(_077_)
  );
  NAND_delay _315_ (
    .A(_077_),
    .B(_070_),
    .Y(_078_)
  );
  NOR_delay _316_ (
    .A(_078_),
    .B(_063_),
    .Y(_079_)
  );
  NOT_delay _317_ (
    .A(muxOUT[1]),
    .Y(_080_)
  );
  NAND_delay _318_ (
    .A(_005_),
    .B(_080_),
    .Y(_081_)
  );
  NAND_delay _319_ (
    .A(_081_),
    .B(ENB),
    .Y(_082_)
  );
  NOR_delay _320_ (
    .A(_082_),
    .B(_079_),
    .Y(_000_[1])
  );
  NOR_delay _321_ (
    .A(_024_),
    .B(_006_),
    .Y(_083_)
  );
  NAND_delay _322_ (
    .A(_083_),
    .B(SDP[2]),
    .Y(_084_)
  );
  NOT_delay _323_ (
    .A(STP[2]),
    .Y(_085_)
  );
  NAND_delay _324_ (
    .A(_059_),
    .B(_014_),
    .Y(_086_)
  );
  NOR_delay _325_ (
    .A(_086_),
    .B(_085_),
    .Y(_087_)
  );
  NOT_delay _326_ (
    .A(TLP[2]),
    .Y(_088_)
  );
  NOR_delay _327_ (
    .A(_060_),
    .B(_088_),
    .Y(_089_)
  );
  NOR_delay _328_ (
    .A(_089_),
    .B(_087_),
    .Y(_090_)
  );
  NAND_delay _329_ (
    .A(_090_),
    .B(_084_),
    .Y(_091_)
  );
  NAND_delay _330_ (
    .A(_026_),
    .B(IDL[2]),
    .Y(_092_)
  );
  NAND_delay _331_ (
    .A(_029_),
    .B(END[2]),
    .Y(_093_)
  );
  NAND_delay _332_ (
    .A(_093_),
    .B(_092_),
    .Y(_094_)
  );
  NAND_delay _333_ (
    .A(_033_),
    .B(EDB[2]),
    .Y(_095_)
  );
  NAND_delay _334_ (
    .A(_044_),
    .B(SKP[2]),
    .Y(_096_)
  );
  NAND_delay _335_ (
    .A(_096_),
    .B(_095_),
    .Y(_097_)
  );
  NOR_delay _336_ (
    .A(_097_),
    .B(_094_),
    .Y(_098_)
  );
  NAND_delay _337_ (
    .A(_071_),
    .B(COM[2]),
    .Y(_099_)
  );
  NAND_delay _338_ (
    .A(_099_),
    .B(_039_),
    .Y(_100_)
  );
  NAND_delay _339_ (
    .A(_035_),
    .B(FTS[2]),
    .Y(_101_)
  );
  NAND_delay _340_ (
    .A(_046_),
    .B(PAD[2]),
    .Y(_102_)
  );
  NAND_delay _341_ (
    .A(_102_),
    .B(_101_),
    .Y(_103_)
  );
  NOR_delay _342_ (
    .A(_103_),
    .B(_100_),
    .Y(_104_)
  );
  NAND_delay _343_ (
    .A(_104_),
    .B(_098_),
    .Y(_105_)
  );
  NOR_delay _344_ (
    .A(_105_),
    .B(_091_),
    .Y(_106_)
  );
  NOT_delay _345_ (
    .A(muxOUT[2]),
    .Y(_107_)
  );
  NAND_delay _346_ (
    .A(_005_),
    .B(_107_),
    .Y(_108_)
  );
  NAND_delay _347_ (
    .A(_108_),
    .B(ENB),
    .Y(_109_)
  );
  NOR_delay _348_ (
    .A(_109_),
    .B(_106_),
    .Y(_000_[2])
  );
  NAND_delay _349_ (
    .A(_083_),
    .B(SDP[3]),
    .Y(_110_)
  );
  NOT_delay _350_ (
    .A(STP[3]),
    .Y(_111_)
  );
  NOR_delay _351_ (
    .A(_086_),
    .B(_111_),
    .Y(_112_)
  );
  NOT_delay _352_ (
    .A(TLP[3]),
    .Y(_113_)
  );
  NOR_delay _353_ (
    .A(_060_),
    .B(_113_),
    .Y(_114_)
  );
  NOR_delay _354_ (
    .A(_114_),
    .B(_112_),
    .Y(_115_)
  );
  NAND_delay _355_ (
    .A(_115_),
    .B(_110_),
    .Y(_116_)
  );
  NAND_delay _356_ (
    .A(_026_),
    .B(IDL[3]),
    .Y(_117_)
  );
  NAND_delay _357_ (
    .A(_029_),
    .B(END[3]),
    .Y(_118_)
  );
  NAND_delay _358_ (
    .A(_118_),
    .B(_117_),
    .Y(_119_)
  );
  NAND_delay _359_ (
    .A(_033_),
    .B(EDB[3]),
    .Y(_120_)
  );
  NAND_delay _360_ (
    .A(_035_),
    .B(FTS[3]),
    .Y(_121_)
  );
  NAND_delay _361_ (
    .A(_121_),
    .B(_120_),
    .Y(_122_)
  );
  NOR_delay _362_ (
    .A(_122_),
    .B(_119_),
    .Y(_123_)
  );
  NAND_delay _363_ (
    .A(_046_),
    .B(PAD[3]),
    .Y(_124_)
  );
  NAND_delay _364_ (
    .A(_124_),
    .B(_039_),
    .Y(_125_)
  );
  NAND_delay _365_ (
    .A(_044_),
    .B(SKP[3]),
    .Y(_126_)
  );
  NAND_delay _366_ (
    .A(_071_),
    .B(COM[3]),
    .Y(_127_)
  );
  NAND_delay _367_ (
    .A(_127_),
    .B(_126_),
    .Y(_128_)
  );
  NOR_delay _368_ (
    .A(_128_),
    .B(_125_),
    .Y(_129_)
  );
  NAND_delay _369_ (
    .A(_129_),
    .B(_123_),
    .Y(_130_)
  );
  NOR_delay _370_ (
    .A(_130_),
    .B(_116_),
    .Y(_131_)
  );
  NOT_delay _371_ (
    .A(muxOUT[3]),
    .Y(_132_)
  );
  NAND_delay _372_ (
    .A(_005_),
    .B(_132_),
    .Y(_133_)
  );
  NAND_delay _373_ (
    .A(_133_),
    .B(ENB),
    .Y(_134_)
  );
  NOR_delay _374_ (
    .A(_134_),
    .B(_131_),
    .Y(_000_[3])
  );
  NAND_delay _375_ (
    .A(_035_),
    .B(FTS[4]),
    .Y(_135_)
  );
  NOT_delay _376_ (
    .A(PAD[4]),
    .Y(_136_)
  );
  NOR_delay _377_ (
    .A(_008_),
    .B(muxCTRL[0]),
    .Y(_137_)
  );
  NAND_delay _378_ (
    .A(_137_),
    .B(_019_),
    .Y(_138_)
  );
  NOR_delay _379_ (
    .A(_138_),
    .B(_136_),
    .Y(_139_)
  );
  NOT_delay _380_ (
    .A(COM[4]),
    .Y(_140_)
  );
  NOR_delay _381_ (
    .A(_020_),
    .B(_140_),
    .Y(_141_)
  );
  NOR_delay _382_ (
    .A(_141_),
    .B(_139_),
    .Y(_142_)
  );
  NAND_delay _383_ (
    .A(_142_),
    .B(_135_),
    .Y(_143_)
  );
  NAND_delay _384_ (
    .A(_033_),
    .B(EDB[4]),
    .Y(_144_)
  );
  NAND_delay _385_ (
    .A(_010_),
    .B(STP[4]),
    .Y(_145_)
  );
  NAND_delay _386_ (
    .A(_145_),
    .B(_144_),
    .Y(_146_)
  );
  NAND_delay _387_ (
    .A(_026_),
    .B(IDL[4]),
    .Y(_147_)
  );
  NAND_delay _388_ (
    .A(_083_),
    .B(SDP[4]),
    .Y(_148_)
  );
  NAND_delay _389_ (
    .A(_148_),
    .B(_147_),
    .Y(_149_)
  );
  NOR_delay _390_ (
    .A(_149_),
    .B(_146_),
    .Y(_150_)
  );
  NAND_delay _391_ (
    .A(_044_),
    .B(SKP[4]),
    .Y(_151_)
  );
  NAND_delay _392_ (
    .A(_151_),
    .B(_039_),
    .Y(_152_)
  );
  NAND_delay _393_ (
    .A(_029_),
    .B(END[4]),
    .Y(_153_)
  );
  NAND_delay _394_ (
    .A(_041_),
    .B(TLP[4]),
    .Y(_154_)
  );
  NAND_delay _395_ (
    .A(_154_),
    .B(_153_),
    .Y(_155_)
  );
  NOR_delay _396_ (
    .A(_155_),
    .B(_152_),
    .Y(_156_)
  );
  NAND_delay _397_ (
    .A(_156_),
    .B(_150_),
    .Y(_157_)
  );
  NOR_delay _398_ (
    .A(_157_),
    .B(_143_),
    .Y(_158_)
  );
  NOT_delay _399_ (
    .A(muxOUT[4]),
    .Y(_159_)
  );
  NAND_delay _400_ (
    .A(_005_),
    .B(_159_),
    .Y(_160_)
  );
  NAND_delay _401_ (
    .A(_160_),
    .B(ENB),
    .Y(_161_)
  );
  NOR_delay _402_ (
    .A(_161_),
    .B(_158_),
    .Y(_000_[4])
  );
  NAND_delay _403_ (
    .A(_083_),
    .B(SDP[5]),
    .Y(_162_)
  );
  NOT_delay _404_ (
    .A(STP[5]),
    .Y(_163_)
  );
  NOR_delay _405_ (
    .A(_086_),
    .B(_163_),
    .Y(_164_)
  );
  NOT_delay _406_ (
    .A(TLP[5]),
    .Y(_165_)
  );
  NOR_delay _407_ (
    .A(_060_),
    .B(_165_),
    .Y(_166_)
  );
  NOR_delay _408_ (
    .A(_166_),
    .B(_164_),
    .Y(_167_)
  );
  NAND_delay _409_ (
    .A(_167_),
    .B(_162_),
    .Y(_168_)
  );
  NAND_delay _410_ (
    .A(_026_),
    .B(IDL[5]),
    .Y(_169_)
  );
  NAND_delay _411_ (
    .A(_029_),
    .B(END[5]),
    .Y(_170_)
  );
  NAND_delay _412_ (
    .A(_170_),
    .B(_169_),
    .Y(_171_)
  );
  NAND_delay _413_ (
    .A(_033_),
    .B(EDB[5]),
    .Y(_172_)
  );
  NAND_delay _414_ (
    .A(_035_),
    .B(FTS[5]),
    .Y(_173_)
  );
  NAND_delay _415_ (
    .A(_173_),
    .B(_172_),
    .Y(_174_)
  );
  NOR_delay _416_ (
    .A(_174_),
    .B(_171_),
    .Y(_175_)
  );
  NAND_delay _417_ (
    .A(_046_),
    .B(PAD[5]),
    .Y(_176_)
  );
  NAND_delay _418_ (
    .A(_176_),
    .B(_039_),
    .Y(_177_)
  );
  NAND_delay _419_ (
    .A(_044_),
    .B(SKP[5]),
    .Y(_178_)
  );
  NAND_delay _420_ (
    .A(_071_),
    .B(COM[5]),
    .Y(_179_)
  );
  NAND_delay _421_ (
    .A(_179_),
    .B(_178_),
    .Y(_180_)
  );
  NOR_delay _422_ (
    .A(_180_),
    .B(_177_),
    .Y(_181_)
  );
  NAND_delay _423_ (
    .A(_181_),
    .B(_175_),
    .Y(_182_)
  );
  NOR_delay _424_ (
    .A(_182_),
    .B(_168_),
    .Y(_183_)
  );
  NOT_delay _425_ (
    .A(muxOUT[5]),
    .Y(_184_)
  );
  NAND_delay _426_ (
    .A(_005_),
    .B(_184_),
    .Y(_185_)
  );
  NAND_delay _427_ (
    .A(_185_),
    .B(ENB),
    .Y(_186_)
  );
  NOR_delay _428_ (
    .A(_186_),
    .B(_183_),
    .Y(_000_[5])
  );
  NAND_delay _429_ (
    .A(_010_),
    .B(STP[6]),
    .Y(_187_)
  );
  NOT_delay _430_ (
    .A(SDP[6]),
    .Y(_188_)
  );
  NOR_delay _431_ (
    .A(_016_),
    .B(_188_),
    .Y(_189_)
  );
  NOT_delay _432_ (
    .A(COM[6]),
    .Y(_190_)
  );
  NOR_delay _433_ (
    .A(_020_),
    .B(_190_),
    .Y(_191_)
  );
  NOR_delay _434_ (
    .A(_191_),
    .B(_189_),
    .Y(_192_)
  );
  NAND_delay _435_ (
    .A(_192_),
    .B(_187_),
    .Y(_193_)
  );
  NAND_delay _436_ (
    .A(_026_),
    .B(IDL[6]),
    .Y(_194_)
  );
  NAND_delay _437_ (
    .A(_029_),
    .B(END[6]),
    .Y(_195_)
  );
  NAND_delay _438_ (
    .A(_195_),
    .B(_194_),
    .Y(_196_)
  );
  NAND_delay _439_ (
    .A(_033_),
    .B(EDB[6]),
    .Y(_197_)
  );
  NAND_delay _440_ (
    .A(_035_),
    .B(FTS[6]),
    .Y(_198_)
  );
  NAND_delay _441_ (
    .A(_198_),
    .B(_197_),
    .Y(_199_)
  );
  NOR_delay _442_ (
    .A(_199_),
    .B(_196_),
    .Y(_200_)
  );
  NAND_delay _443_ (
    .A(_041_),
    .B(TLP[6]),
    .Y(_201_)
  );
  NAND_delay _444_ (
    .A(_201_),
    .B(_039_),
    .Y(_202_)
  );
  NAND_delay _445_ (
    .A(_044_),
    .B(SKP[6]),
    .Y(_203_)
  );
  NAND_delay _446_ (
    .A(_046_),
    .B(PAD[6]),
    .Y(_204_)
  );
  NAND_delay _447_ (
    .A(_204_),
    .B(_203_),
    .Y(_205_)
  );
  NOR_delay _448_ (
    .A(_205_),
    .B(_202_),
    .Y(_206_)
  );
  NAND_delay _449_ (
    .A(_206_),
    .B(_200_),
    .Y(_207_)
  );
  NOR_delay _450_ (
    .A(_207_),
    .B(_193_),
    .Y(_208_)
  );
  NOT_delay _451_ (
    .A(muxOUT[6]),
    .Y(_209_)
  );
  NAND_delay _452_ (
    .A(_005_),
    .B(_209_),
    .Y(_210_)
  );
  NAND_delay _453_ (
    .A(_210_),
    .B(ENB),
    .Y(_211_)
  );
  NOR_delay _454_ (
    .A(_211_),
    .B(_208_),
    .Y(_000_[6])
  );
  NAND_delay _455_ (
    .A(_083_),
    .B(SDP[7]),
    .Y(_212_)
  );
  NOT_delay _456_ (
    .A(STP[7]),
    .Y(_213_)
  );
  NOR_delay _457_ (
    .A(_086_),
    .B(_213_),
    .Y(_214_)
  );
  NOT_delay _458_ (
    .A(TLP[7]),
    .Y(_215_)
  );
  NOR_delay _459_ (
    .A(_060_),
    .B(_215_),
    .Y(_216_)
  );
  NOR_delay _460_ (
    .A(_216_),
    .B(_214_),
    .Y(_217_)
  );
  NAND_delay _461_ (
    .A(_217_),
    .B(_212_),
    .Y(_218_)
  );
  NAND_delay _462_ (
    .A(_026_),
    .B(IDL[7]),
    .Y(_219_)
  );
  NAND_delay _463_ (
    .A(_029_),
    .B(END[7]),
    .Y(_220_)
  );
  NAND_delay _464_ (
    .A(_220_),
    .B(_219_),
    .Y(_221_)
  );
  NAND_delay _465_ (
    .A(_033_),
    .B(EDB[7]),
    .Y(_222_)
  );
  NAND_delay _466_ (
    .A(_044_),
    .B(SKP[7]),
    .Y(_223_)
  );
  NAND_delay _467_ (
    .A(_223_),
    .B(_222_),
    .Y(_224_)
  );
  NOR_delay _468_ (
    .A(_224_),
    .B(_221_),
    .Y(_225_)
  );
  NAND_delay _469_ (
    .A(_046_),
    .B(PAD[7]),
    .Y(_226_)
  );
  NAND_delay _470_ (
    .A(_226_),
    .B(_039_),
    .Y(_227_)
  );
  NAND_delay _471_ (
    .A(_035_),
    .B(FTS[7]),
    .Y(_228_)
  );
  NAND_delay _472_ (
    .A(_071_),
    .B(COM[7]),
    .Y(_229_)
  );
  NAND_delay _473_ (
    .A(_229_),
    .B(_228_),
    .Y(_230_)
  );
  NOR_delay _474_ (
    .A(_230_),
    .B(_227_),
    .Y(_231_)
  );
  NAND_delay _475_ (
    .A(_231_),
    .B(_225_),
    .Y(_232_)
  );
  NOR_delay _476_ (
    .A(_232_),
    .B(_218_),
    .Y(_233_)
  );
  NOT_delay _477_ (
    .A(muxOUT[7]),
    .Y(_234_)
  );
  NAND_delay _478_ (
    .A(_005_),
    .B(_234_),
    .Y(_235_)
  );
  NAND_delay _479_ (
    .A(_235_),
    .B(ENB),
    .Y(_236_)
  );
  NOR_delay _480_ (
    .A(_236_),
    .B(_233_),
    .Y(_000_[7])
  );
  always @(posedge muxCLK)
      muxOUT[0] <= #15  _000_[0];
  always @(posedge muxCLK)
      muxOUT[1] <= #15  _000_[1];
  always @(posedge muxCLK)
      muxOUT[2] <= #15  _000_[2];
  always @(posedge muxCLK)
      muxOUT[3] <= #15  _000_[3];
  always @(posedge muxCLK)
      muxOUT[4] <= #15  _000_[4];
  always @(posedge muxCLK)
      muxOUT[5] <= #15  _000_[5];
  always @(posedge muxCLK)
      muxOUT[6] <= #15  _000_[6];
  always @(posedge muxCLK)
      muxOUT[7] <= #15  _000_[7];
  always @(posedge muxCLK)
      muxVLD <= #15  _001_;
endmodule

module mux4a1_synth_delay(In0, In1, In2, In3, Sel, ENB, outmux);
  input ENB;
  input [7:0] In0;
  input [7:0] In1;
  input [7:0] In2;
  input [7:0] In3;
  input [1:0] Sel;
  output [7:0] outmux;
  assign outmux = 8'b00000000;
endmodule

module mux_ctr_synth_delay(valid_count, CLK, reset, CTR);
  input CLK;
  output [2:0] CTR;
  input reset;
  input valid_count;
  assign CTR = 3'b111;
endmodule

module mux_p2s_synth_delay(sel, data_in, data_out);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  input [7:0] data_in;
  output data_out;
  input [2:0] sel;
  NAND_delay _23_ (
    .A(data_in[7]),
    .B(sel[2]),
    .Y(_00_)
  );
  NOT_delay _24_ (
    .A(sel[2]),
    .Y(_01_)
  );
  NAND_delay _25_ (
    .A(data_in[3]),
    .B(_01_),
    .Y(_02_)
  );
  NAND_delay _26_ (
    .A(_02_),
    .B(_00_),
    .Y(_03_)
  );
  NAND_delay _27_ (
    .A(_03_),
    .B(sel[0]),
    .Y(_04_)
  );
  NOT_delay _28_ (
    .A(sel[0]),
    .Y(_05_)
  );
  NOR_delay _29_ (
    .A(data_in[2]),
    .B(sel[2]),
    .Y(_06_)
  );
  NOR_delay _30_ (
    .A(data_in[6]),
    .B(_01_),
    .Y(_07_)
  );
  NOR_delay _31_ (
    .A(_07_),
    .B(_06_),
    .Y(_08_)
  );
  NAND_delay _32_ (
    .A(_08_),
    .B(_05_),
    .Y(_09_)
  );
  NAND_delay _33_ (
    .A(_09_),
    .B(_04_),
    .Y(_10_)
  );
  NAND_delay _34_ (
    .A(_10_),
    .B(sel[1]),
    .Y(_11_)
  );
  NOT_delay _35_ (
    .A(sel[1]),
    .Y(_12_)
  );
  NAND_delay _36_ (
    .A(data_in[1]),
    .B(_01_),
    .Y(_13_)
  );
  NAND_delay _37_ (
    .A(data_in[5]),
    .B(sel[2]),
    .Y(_14_)
  );
  NAND_delay _38_ (
    .A(_14_),
    .B(_13_),
    .Y(_15_)
  );
  NAND_delay _39_ (
    .A(_15_),
    .B(sel[0]),
    .Y(_16_)
  );
  NOR_delay _40_ (
    .A(data_in[0]),
    .B(sel[2]),
    .Y(_17_)
  );
  NOR_delay _41_ (
    .A(data_in[4]),
    .B(_01_),
    .Y(_18_)
  );
  NOR_delay _42_ (
    .A(_18_),
    .B(_17_),
    .Y(_19_)
  );
  NAND_delay _43_ (
    .A(_19_),
    .B(_05_),
    .Y(_20_)
  );
  NAND_delay _44_ (
    .A(_20_),
    .B(_16_),
    .Y(_21_)
  );
  NAND_delay _45_ (
    .A(_21_),
    .B(_12_),
    .Y(_22_)
  );
  NAND_delay _46_ (
    .A(_22_),
    .B(_11_),
    .Y(data_out)
  );
endmodule

module p2s_synth_delay(IN_CLK_p2s, IN_LANE3_p2s, IN_LANE2_p2s, IN_LANE1_p2s, IN_LANE0_p2s, IN_CTR_p2s, IN_ENB_p2s, IN_VALID_BS, OUT_LANE_p2s);
  input IN_CLK_p2s;
  input [2:0] IN_CTR_p2s;
  input IN_ENB_p2s;
  input [7:0] IN_LANE0_p2s;
  input [7:0] IN_LANE1_p2s;
  input [7:0] IN_LANE2_p2s;
  input [7:0] IN_LANE3_p2s;
  input IN_VALID_BS;
  output [3:0] OUT_LANE_p2s;
  wire [7:0] Q0_p2s;
  wire [7:0] Q1_p2s;
  wire [7:0] Q2_p2s;
  wire [7:0] Q3_p2s;
  wire valid_ffd;
  ffd_p2s_synth_delay \ffd_lane0[0]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE0_p2s[0]),
    .ENB(IN_ENB_p2s),
    .Q(Q0_p2s[0]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane0[1]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE0_p2s[1]),
    .ENB(IN_ENB_p2s),
    .Q(Q0_p2s[1]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane0[2]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE0_p2s[2]),
    .ENB(IN_ENB_p2s),
    .Q(Q0_p2s[2]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane0[3]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE0_p2s[3]),
    .ENB(IN_ENB_p2s),
    .Q(Q0_p2s[3]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane0[4]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE0_p2s[4]),
    .ENB(IN_ENB_p2s),
    .Q(Q0_p2s[4]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane0[5]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE0_p2s[5]),
    .ENB(IN_ENB_p2s),
    .Q(Q0_p2s[5]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane0[6]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE0_p2s[6]),
    .ENB(IN_ENB_p2s),
    .Q(Q0_p2s[6]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane0[7]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE0_p2s[7]),
    .ENB(IN_ENB_p2s),
    .Q(Q0_p2s[7]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane1[0]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE1_p2s[0]),
    .ENB(IN_ENB_p2s),
    .Q(Q1_p2s[0]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane1[1]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE1_p2s[1]),
    .ENB(IN_ENB_p2s),
    .Q(Q1_p2s[1]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane1[2]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE1_p2s[2]),
    .ENB(IN_ENB_p2s),
    .Q(Q1_p2s[2]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane1[3]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE1_p2s[3]),
    .ENB(IN_ENB_p2s),
    .Q(Q1_p2s[3]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane1[4]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE1_p2s[4]),
    .ENB(IN_ENB_p2s),
    .Q(Q1_p2s[4]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane1[5]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE1_p2s[5]),
    .ENB(IN_ENB_p2s),
    .Q(Q1_p2s[5]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane1[6]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE1_p2s[6]),
    .ENB(IN_ENB_p2s),
    .Q(Q1_p2s[6]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane1[7]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE1_p2s[7]),
    .ENB(IN_ENB_p2s),
    .Q(Q1_p2s[7]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane2[0]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE2_p2s[0]),
    .ENB(IN_ENB_p2s),
    .Q(Q2_p2s[0]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane2[1]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE2_p2s[1]),
    .ENB(IN_ENB_p2s),
    .Q(Q2_p2s[1]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane2[2]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE2_p2s[2]),
    .ENB(IN_ENB_p2s),
    .Q(Q2_p2s[2]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane2[3]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE2_p2s[3]),
    .ENB(IN_ENB_p2s),
    .Q(Q2_p2s[3]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane2[4]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE2_p2s[4]),
    .ENB(IN_ENB_p2s),
    .Q(Q2_p2s[4]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane2[5]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE2_p2s[5]),
    .ENB(IN_ENB_p2s),
    .Q(Q2_p2s[5]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane2[6]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE2_p2s[6]),
    .ENB(IN_ENB_p2s),
    .Q(Q2_p2s[6]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane2[7]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE2_p2s[7]),
    .ENB(IN_ENB_p2s),
    .Q(Q2_p2s[7]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane3[0]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE3_p2s[0]),
    .ENB(IN_ENB_p2s),
    .Q(Q3_p2s[0]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane3[1]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE3_p2s[1]),
    .ENB(IN_ENB_p2s),
    .Q(Q3_p2s[1]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane3[2]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE3_p2s[2]),
    .ENB(IN_ENB_p2s),
    .Q(Q3_p2s[2]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane3[3]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE3_p2s[3]),
    .ENB(IN_ENB_p2s),
    .Q(Q3_p2s[3]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane3[4]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE3_p2s[4]),
    .ENB(IN_ENB_p2s),
    .Q(Q3_p2s[4]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane3[5]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE3_p2s[5]),
    .ENB(IN_ENB_p2s),
    .Q(Q3_p2s[5]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay \ffd_lane3[6]  (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE3_p2s[6]),
    .ENB(IN_ENB_p2s),
    .Q(Q3_p2s[6]),
    .valid_in(IN_VALID_BS)
  );
  ffd_p2s_synth_delay ffd_valid (
    .CLK(IN_CLK_p2s),
    .D(IN_LANE3_p2s[7]),
    .ENB(IN_ENB_p2s),
    .Q(Q3_p2s[7]),
    .valid_in(IN_VALID_BS),
    .valid_out(valid_ffd)
  );
  mux_p2s_synth_delay mux_lane0 (
    .data_in(Q0_p2s),
    .data_out(OUT_LANE_p2s[0]),
    .sel(IN_CTR_p2s)
  );
  mux_p2s_synth_delay mux_lane1 (
    .data_in(Q1_p2s),
    .data_out(OUT_LANE_p2s[1]),
    .sel(IN_CTR_p2s)
  );
  mux_p2s_synth_delay mux_lane2 (
    .data_in(Q2_p2s),
    .data_out(OUT_LANE_p2s[2]),
    .sel(IN_CTR_p2s)
  );
  mux_p2s_synth_delay mux_lane3 (
    .data_in(Q3_p2s),
    .data_out(OUT_LANE_p2s[3]),
    .sel(IN_CTR_p2s)
  );
endmodule

module p2s_s2p_synth_delay(IN_CLK_2MHz, IN_CLK_250KHz, IN_LANE3, IN_LANE2, IN_LANE1, IN_LANE0, IN_ENB_TX, IN_RESET_TX, IN_VALID_TX, IN_ENB_RX, IN_RESET_RX, OUT_LANE3, OUT_LANE2, OUT_LANE1, OUT_LANE0);
  wire [1:0] CLK_RX;
  wire [2:0] CTR_TX;
  input IN_CLK_250KHz;
  input IN_CLK_2MHz;
  input IN_ENB_RX;
  input IN_ENB_TX;
  input [7:0] IN_LANE0;
  input [7:0] IN_LANE1;
  input [7:0] IN_LANE2;
  input [7:0] IN_LANE3;
  input IN_RESET_RX;
  input IN_RESET_TX;
  input IN_VALID_TX;
  wire [3:0] LANE;
  output [7:0] OUT_LANE0;
  output [7:0] OUT_LANE1;
  output [7:0] OUT_LANE2;
  output [7:0] OUT_LANE3;
  mux_ctr_synth_delay ctr_tx_cond (
    .CLK(IN_CLK_2MHz),
    .CTR(CTR_TX),
    .reset(IN_RESET_TX),
    .valid_count(IN_VALID_TX)
  );
  s2p_synth_delay low_rx_cond (
    .IN_CLK_s2p({ IN_CLK_250KHz, IN_CLK_2MHz }),
    .IN_DIR_s2p(1'b1),
    .IN_ENB_s2p(IN_ENB_RX),
    .IN_LANE_s2p(LANE),
    .IN_MODO_s2p(2'b00),
    .IN_RESET_s2p(IN_RESET_RX),
    .OUT_LANE0_s2p(OUT_LANE0),
    .OUT_LANE1_s2p(OUT_LANE1),
    .OUT_LANE2_s2p(OUT_LANE2),
    .OUT_LANE3_s2p(OUT_LANE3)
  );
  p2s_synth_delay low_tx_cond (
    .IN_CLK_p2s(IN_CLK_2MHz),
    .IN_CTR_p2s(CTR_TX),
    .IN_ENB_p2s(IN_ENB_TX),
    .IN_LANE0_p2s(IN_LANE0),
    .IN_LANE1_p2s(IN_LANE1),
    .IN_LANE2_p2s(IN_LANE2),
    .IN_LANE3_p2s(IN_LANE3),
    .IN_VALID_BS(IN_VALID_TX),
    .OUT_LANE_p2s(LANE)
  );
  assign CLK_RX = { IN_CLK_250KHz, IN_CLK_2MHz };
endmodule

module pcie_synth_delay(IN_COM, IN_PAD, IN_SKP, IN_STP, IN_SDP, IN_END, IN_EDB, IN_FTS, IN_IDL, IN_TLP, IN_CTRL, IN_CLK_2MHz, CLK_1MHz, CLK_500KHz, CLK_250KHz, IN_RESET_CLK, IN_ENB_TX_RX, OUT_DATA);
  input CLK_1MHz;
  input CLK_250KHz;
  input CLK_500KHz;
  input IN_CLK_2MHz;
  input [7:0] IN_COM;
  input [3:0] IN_CTRL;
  input [7:0] IN_EDB;
  input IN_ENB_TX_RX;
  input [7:0] IN_END;
  input [7:0] IN_FTS;
  input [7:0] IN_IDL;
  input [7:0] IN_PAD;
  input IN_RESET_CLK;
  input [7:0] IN_SDP;
  input [7:0] IN_SKP;
  input [7:0] IN_STP;
  input [7:0] IN_TLP;
  output [7:0] OUT_DATA;
endmodule

module s2p_synth_delay(IN_CLK_s2p, IN_LANE_s2p, IN_MODO_s2p, IN_DIR_s2p, IN_ENB_s2p, IN_RESET_s2p, OUT_LANE3_s2p, OUT_LANE2_s2p, OUT_LANE1_s2p, OUT_LANE0_s2p);
  input [1:0] IN_CLK_s2p;
  input IN_DIR_s2p;
  input IN_ENB_s2p;
  input [3:0] IN_LANE_s2p;
  input [1:0] IN_MODO_s2p;
  input IN_RESET_s2p;
  output [7:0] OUT_LANE0_s2p;
  output [7:0] OUT_LANE1_s2p;
  output [7:0] OUT_LANE2_s2p;
  output [7:0] OUT_LANE3_s2p;
  wire [7:0] P0_synth_delay_s2p;
  wire [7:0] P1_synth_delay_s2p;
  wire [7:0] P2_synth_delay_s2p;
  wire [7:0] P3_synth_delay_s2p;
  ffd_s2p_synth_delay \ffd_lane0[0]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P0_synth_delay_s2p[0]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE0_s2p[0])
  );
  ffd_s2p_synth_delay \ffd_lane0[1]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P0_synth_delay_s2p[1]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE0_s2p[1])
  );
  ffd_s2p_synth_delay \ffd_lane0[2]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P0_synth_delay_s2p[2]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE0_s2p[2])
  );
  ffd_s2p_synth_delay \ffd_lane0[3]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P0_synth_delay_s2p[3]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE0_s2p[3])
  );
  ffd_s2p_synth_delay \ffd_lane0[4]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P0_synth_delay_s2p[4]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE0_s2p[4])
  );
  ffd_s2p_synth_delay \ffd_lane0[5]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P0_synth_delay_s2p[5]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE0_s2p[5])
  );
  ffd_s2p_synth_delay \ffd_lane0[6]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P0_synth_delay_s2p[6]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE0_s2p[6])
  );
  ffd_s2p_synth_delay \ffd_lane0[7]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P0_synth_delay_s2p[7]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE0_s2p[7])
  );
  ffd_s2p_synth_delay \ffd_lane1[0]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P1_synth_delay_s2p[0]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE1_s2p[0])
  );
  ffd_s2p_synth_delay \ffd_lane1[1]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P1_synth_delay_s2p[1]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE1_s2p[1])
  );
  ffd_s2p_synth_delay \ffd_lane1[2]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P1_synth_delay_s2p[2]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE1_s2p[2])
  );
  ffd_s2p_synth_delay \ffd_lane1[3]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P1_synth_delay_s2p[3]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE1_s2p[3])
  );
  ffd_s2p_synth_delay \ffd_lane1[4]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P1_synth_delay_s2p[4]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE1_s2p[4])
  );
  ffd_s2p_synth_delay \ffd_lane1[5]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P1_synth_delay_s2p[5]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE1_s2p[5])
  );
  ffd_s2p_synth_delay \ffd_lane1[6]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P1_synth_delay_s2p[6]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE1_s2p[6])
  );
  ffd_s2p_synth_delay \ffd_lane1[7]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P1_synth_delay_s2p[7]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE1_s2p[7])
  );
  ffd_s2p_synth_delay \ffd_lane2[0]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P2_synth_delay_s2p[0]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE2_s2p[0])
  );
  ffd_s2p_synth_delay \ffd_lane2[1]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P2_synth_delay_s2p[1]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE2_s2p[1])
  );
  ffd_s2p_synth_delay \ffd_lane2[2]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P2_synth_delay_s2p[2]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE2_s2p[2])
  );
  ffd_s2p_synth_delay \ffd_lane2[3]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P2_synth_delay_s2p[3]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE2_s2p[3])
  );
  ffd_s2p_synth_delay \ffd_lane2[4]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P2_synth_delay_s2p[4]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE2_s2p[4])
  );
  ffd_s2p_synth_delay \ffd_lane2[5]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P2_synth_delay_s2p[5]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE2_s2p[5])
  );
  ffd_s2p_synth_delay \ffd_lane2[6]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P2_synth_delay_s2p[6]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE2_s2p[6])
  );
  ffd_s2p_synth_delay \ffd_lane2[7]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P2_synth_delay_s2p[7]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE2_s2p[7])
  );
  ffd_s2p_synth_delay \ffd_lane3[0]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P3_synth_delay_s2p[0]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE3_s2p[0])
  );
  ffd_s2p_synth_delay \ffd_lane3[1]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P3_synth_delay_s2p[1]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE3_s2p[1])
  );
  ffd_s2p_synth_delay \ffd_lane3[2]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P3_synth_delay_s2p[2]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE3_s2p[2])
  );
  ffd_s2p_synth_delay \ffd_lane3[3]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P3_synth_delay_s2p[3]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE3_s2p[3])
  );
  ffd_s2p_synth_delay \ffd_lane3[4]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P3_synth_delay_s2p[4]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE3_s2p[4])
  );
  ffd_s2p_synth_delay \ffd_lane3[5]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P3_synth_delay_s2p[5]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE3_s2p[5])
  );
  ffd_s2p_synth_delay \ffd_lane3[6]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P3_synth_delay_s2p[6]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE3_s2p[6])
  );
  ffd_s2p_synth_delay \ffd_lane3[7]  (
    .CLK(IN_CLK_s2p[1]),
    .D(P3_synth_delay_s2p[7]),
    .ENB(IN_ENB_s2p),
    .Q(OUT_LANE3_s2p[7])
  );
  s2p_reg_synth_delay reg_lane0 (
    .CLK(IN_CLK_s2p[0]),
    .DIR(IN_DIR_s2p),
    .ENB(IN_ENB_s2p),
    .MODO(IN_MODO_s2p),
    .Q(P0_synth_delay_s2p),
    .RESET(IN_RESET_s2p),
    .S_IN(IN_LANE_s2p[0])
  );
  s2p_reg_synth_delay reg_lane1 (
    .CLK(IN_CLK_s2p[0]),
    .DIR(IN_DIR_s2p),
    .ENB(IN_ENB_s2p),
    .MODO(IN_MODO_s2p),
    .Q(P1_synth_delay_s2p),
    .RESET(IN_RESET_s2p),
    .S_IN(IN_LANE_s2p[1])
  );
  s2p_reg_synth_delay reg_lane2 (
    .CLK(IN_CLK_s2p[0]),
    .DIR(IN_DIR_s2p),
    .ENB(IN_ENB_s2p),
    .MODO(IN_MODO_s2p),
    .Q(P2_synth_delay_s2p),
    .RESET(IN_RESET_s2p),
    .S_IN(IN_LANE_s2p[2])
  );
  s2p_reg_synth_delay reg_lane3 (
    .CLK(IN_CLK_s2p[0]),
    .DIR(IN_DIR_s2p),
    .ENB(IN_ENB_s2p),
    .MODO(IN_MODO_s2p),
    .Q(P3_synth_delay_s2p),
    .RESET(IN_RESET_s2p),
    .S_IN(IN_LANE_s2p[3])
  );
endmodule

module s2p_reg_synth_delay(D, MODO, CLK, ENB, DIR, S_IN, RESET, Q, S_OUT);
  input CLK;
  input [7:0] D;
  input DIR;
  input ENB;
  input [1:0] MODO;
  output [7:0] Q;
  input RESET;
  input S_IN;
  output S_OUT;
  assign Q = 8'b00000000;
  assign S_OUT = 1'b0;
endmodule
