/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

module s2p_reg_synth_delay(D, MODO, CLK, ENB, DIR, S_IN, Q, S_OUT);
  wire [7:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  input CLK;
  input [7:0] D;
  input DIR;
  input ENB;
  input [1:0] MODO;
  output [7:0] Q;
  reg [7:0] Q;
  input S_IN;
  output S_OUT;
  reg S_OUT;
  NOR_delay _085_ (
    .A(ENB),
    .B(Q[0]),
    .Y(_023_)
  );
  NOT_delay _086_ (
    .A(MODO[0]),
    .Y(_024_)
  );
  NOR_delay _087_ (
    .A(_024_),
    .B(MODO[1]),
    .Y(_025_)
  );
  NAND_delay _088_ (
    .A(DIR),
    .B(Q[1]),
    .Y(_026_)
  );
  NOT_delay _089_ (
    .A(DIR),
    .Y(_027_)
  );
  NAND_delay _090_ (
    .A(Q[7]),
    .B(_027_),
    .Y(_028_)
  );
  NAND_delay _091_ (
    .A(_028_),
    .B(_026_),
    .Y(_029_)
  );
  NAND_delay _092_ (
    .A(_029_),
    .B(_025_),
    .Y(_030_)
  );
  NAND_delay _093_ (
    .A(D[0]),
    .B(MODO[1]),
    .Y(_031_)
  );
  NAND_delay _094_ (
    .A(_031_),
    .B(_030_),
    .Y(_032_)
  );
  NOR_delay _095_ (
    .A(MODO[0]),
    .B(MODO[1]),
    .Y(_033_)
  );
  NAND_delay _096_ (
    .A(_027_),
    .B(S_IN),
    .Y(_034_)
  );
  NAND_delay _097_ (
    .A(_034_),
    .B(_026_),
    .Y(_035_)
  );
  NAND_delay _098_ (
    .A(_035_),
    .B(_033_),
    .Y(_036_)
  );
  NAND_delay _099_ (
    .A(_036_),
    .B(ENB),
    .Y(_037_)
  );
  NOR_delay _100_ (
    .A(_037_),
    .B(_032_),
    .Y(_038_)
  );
  NOR_delay _101_ (
    .A(_038_),
    .B(_023_),
    .Y(_000_[0])
  );
  NAND_delay _102_ (
    .A(D[1]),
    .B(MODO[1]),
    .Y(_039_)
  );
  NOT_delay _103_ (
    .A(MODO[1]),
    .Y(_040_)
  );
  NAND_delay _104_ (
    .A(Q[0]),
    .B(_027_),
    .Y(_041_)
  );
  NAND_delay _105_ (
    .A(Q[2]),
    .B(DIR),
    .Y(_042_)
  );
  NAND_delay _106_ (
    .A(_042_),
    .B(_041_),
    .Y(_043_)
  );
  NAND_delay _107_ (
    .A(_043_),
    .B(_040_),
    .Y(_044_)
  );
  NAND_delay _108_ (
    .A(_044_),
    .B(_039_),
    .Y(_045_)
  );
  NAND_delay _109_ (
    .A(_045_),
    .B(ENB),
    .Y(_046_)
  );
  NOT_delay _110_ (
    .A(ENB),
    .Y(_047_)
  );
  NAND_delay _111_ (
    .A(_047_),
    .B(Q[1]),
    .Y(_048_)
  );
  NAND_delay _112_ (
    .A(_048_),
    .B(_046_),
    .Y(_000_[1])
  );
  NAND_delay _113_ (
    .A(D[2]),
    .B(MODO[1]),
    .Y(_049_)
  );
  NAND_delay _114_ (
    .A(_027_),
    .B(Q[1]),
    .Y(_050_)
  );
  NAND_delay _115_ (
    .A(Q[3]),
    .B(DIR),
    .Y(_051_)
  );
  NAND_delay _116_ (
    .A(_051_),
    .B(_050_),
    .Y(_052_)
  );
  NAND_delay _117_ (
    .A(_052_),
    .B(_040_),
    .Y(_053_)
  );
  NAND_delay _118_ (
    .A(_053_),
    .B(_049_),
    .Y(_054_)
  );
  NAND_delay _119_ (
    .A(_054_),
    .B(ENB),
    .Y(_055_)
  );
  NAND_delay _120_ (
    .A(_047_),
    .B(Q[2]),
    .Y(_056_)
  );
  NAND_delay _121_ (
    .A(_056_),
    .B(_055_),
    .Y(_000_[2])
  );
  NAND_delay _122_ (
    .A(D[3]),
    .B(MODO[1]),
    .Y(_057_)
  );
  NAND_delay _123_ (
    .A(Q[2]),
    .B(_027_),
    .Y(_058_)
  );
  NAND_delay _124_ (
    .A(Q[4]),
    .B(DIR),
    .Y(_059_)
  );
  NAND_delay _125_ (
    .A(_059_),
    .B(_058_),
    .Y(_060_)
  );
  NAND_delay _126_ (
    .A(_060_),
    .B(_040_),
    .Y(_061_)
  );
  NAND_delay _127_ (
    .A(_061_),
    .B(_057_),
    .Y(_062_)
  );
  NAND_delay _128_ (
    .A(_062_),
    .B(ENB),
    .Y(_063_)
  );
  NAND_delay _129_ (
    .A(_047_),
    .B(Q[3]),
    .Y(_064_)
  );
  NAND_delay _130_ (
    .A(_064_),
    .B(_063_),
    .Y(_000_[3])
  );
  NAND_delay _131_ (
    .A(D[4]),
    .B(MODO[1]),
    .Y(_065_)
  );
  NAND_delay _132_ (
    .A(Q[3]),
    .B(_027_),
    .Y(_066_)
  );
  NAND_delay _133_ (
    .A(Q[5]),
    .B(DIR),
    .Y(_067_)
  );
  NAND_delay _134_ (
    .A(_067_),
    .B(_066_),
    .Y(_068_)
  );
  NAND_delay _135_ (
    .A(_068_),
    .B(_040_),
    .Y(_069_)
  );
  NAND_delay _136_ (
    .A(_069_),
    .B(_065_),
    .Y(_070_)
  );
  NAND_delay _137_ (
    .A(_070_),
    .B(ENB),
    .Y(_071_)
  );
  NAND_delay _138_ (
    .A(_047_),
    .B(Q[4]),
    .Y(_072_)
  );
  NAND_delay _139_ (
    .A(_072_),
    .B(_071_),
    .Y(_000_[4])
  );
  NAND_delay _140_ (
    .A(D[5]),
    .B(MODO[1]),
    .Y(_073_)
  );
  NAND_delay _141_ (
    .A(Q[4]),
    .B(_027_),
    .Y(_074_)
  );
  NAND_delay _142_ (
    .A(Q[6]),
    .B(DIR),
    .Y(_075_)
  );
  NAND_delay _143_ (
    .A(_075_),
    .B(_074_),
    .Y(_076_)
  );
  NAND_delay _144_ (
    .A(_076_),
    .B(_040_),
    .Y(_077_)
  );
  NAND_delay _145_ (
    .A(_077_),
    .B(_073_),
    .Y(_078_)
  );
  NAND_delay _146_ (
    .A(_078_),
    .B(ENB),
    .Y(_079_)
  );
  NAND_delay _147_ (
    .A(_047_),
    .B(Q[5]),
    .Y(_080_)
  );
  NAND_delay _148_ (
    .A(_080_),
    .B(_079_),
    .Y(_000_[5])
  );
  NAND_delay _149_ (
    .A(D[6]),
    .B(MODO[1]),
    .Y(_081_)
  );
  NAND_delay _150_ (
    .A(Q[5]),
    .B(_027_),
    .Y(_082_)
  );
  NAND_delay _151_ (
    .A(Q[7]),
    .B(DIR),
    .Y(_083_)
  );
  NAND_delay _152_ (
    .A(_083_),
    .B(_082_),
    .Y(_084_)
  );
  NAND_delay _153_ (
    .A(_084_),
    .B(_040_),
    .Y(_002_)
  );
  NAND_delay _154_ (
    .A(_002_),
    .B(_081_),
    .Y(_003_)
  );
  NAND_delay _155_ (
    .A(_003_),
    .B(ENB),
    .Y(_004_)
  );
  NAND_delay _156_ (
    .A(_047_),
    .B(Q[6]),
    .Y(_005_)
  );
  NAND_delay _157_ (
    .A(_005_),
    .B(_004_),
    .Y(_000_[6])
  );
  NOR_delay _158_ (
    .A(ENB),
    .B(Q[7]),
    .Y(_006_)
  );
  NAND_delay _159_ (
    .A(Q[6]),
    .B(_027_),
    .Y(_007_)
  );
  NAND_delay _160_ (
    .A(Q[0]),
    .B(DIR),
    .Y(_008_)
  );
  NAND_delay _161_ (
    .A(_008_),
    .B(_007_),
    .Y(_009_)
  );
  NAND_delay _162_ (
    .A(_009_),
    .B(_025_),
    .Y(_010_)
  );
  NAND_delay _163_ (
    .A(D[7]),
    .B(MODO[1]),
    .Y(_011_)
  );
  NAND_delay _164_ (
    .A(_011_),
    .B(_010_),
    .Y(_012_)
  );
  NAND_delay _165_ (
    .A(DIR),
    .B(S_IN),
    .Y(_013_)
  );
  NAND_delay _166_ (
    .A(_013_),
    .B(_007_),
    .Y(_014_)
  );
  NAND_delay _167_ (
    .A(_014_),
    .B(_033_),
    .Y(_015_)
  );
  NAND_delay _168_ (
    .A(_015_),
    .B(ENB),
    .Y(_016_)
  );
  NOR_delay _169_ (
    .A(_016_),
    .B(_012_),
    .Y(_017_)
  );
  NOR_delay _170_ (
    .A(_017_),
    .B(_006_),
    .Y(_000_[7])
  );
  NAND_delay _171_ (
    .A(S_OUT),
    .B(_047_),
    .Y(_018_)
  );
  NAND_delay _172_ (
    .A(_008_),
    .B(_028_),
    .Y(_019_)
  );
  NOT_delay _173_ (
    .A(_033_),
    .Y(_020_)
  );
  NOR_delay _174_ (
    .A(_020_),
    .B(_047_),
    .Y(_021_)
  );
  NAND_delay _175_ (
    .A(_021_),
    .B(_019_),
    .Y(_022_)
  );
  NAND_delay _176_ (
    .A(_022_),
    .B(_018_),
    .Y(_001_)
  );
  always @(posedge CLK)
      Q[0] <= #15  _000_[0];
  always @(posedge CLK)
      Q[1] <= #15  _000_[1];
  always @(posedge CLK)
      Q[2] <= #15  _000_[2];
  always @(posedge CLK)
      Q[3] <= #15  _000_[3];
  always @(posedge CLK)
      Q[4] <= #15  _000_[4];
  always @(posedge CLK)
      Q[5] <= #15  _000_[5];
  always @(posedge CLK)
      Q[6] <= #15  _000_[6];
  always @(posedge CLK)
      Q[7] <= #15  _000_[7];
  always @(posedge CLK)
      S_OUT <= #15  _001_;
endmodule
