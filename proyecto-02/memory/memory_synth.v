/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 5.4.0-6ubuntu1~16.04.4 -O2 -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "memory_cond.v:7" *)
module ram_sp_sr_sw(clk, address, data, cs, we, oe);
  (* src = "memory_cond.v:43" *)
  wire [3:0] _000_;
  (* src = "memory_cond.v:43" *)
  wire [3:0] _001_;
  (* src = "memory_cond.v:43" *)
  wire [3:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire [3:0] _031_;
  (* src = "memory_cond.v:39" *)
  wire _032_;
  (* src = "memory_cond.v:39" *)
  wire _033_;
  (* src = "memory_cond.v:54" *)
  wire _034_;
  (* src = "memory_cond.v:54" *)
  wire _035_;
  (* src = "memory_cond.v:39" *)
  wire _036_;
  wire [3:0] _037_;
  wire [3:0] _038_;
  wire [3:0] _039_;
  wire [3:0] _040_;
  wire [3:0] _041_;
  wire [3:0] _042_;
  wire [3:0] _043_;
  wire [3:0] _044_;
  wire [3:0] _045_;
  wire [3:0] _046_;
  wire [3:0] _047_;
  wire [3:0] _048_;
  wire [3:0] _049_;
  wire [3:0] _050_;
  wire [3:0] _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire [3:0] _068_;
  wire [3:0] _069_;
  wire [3:0] _070_;
  wire [3:0] _071_;
  wire [3:0] _072_;
  wire [3:0] _073_;
  wire [3:0] _074_;
  wire [3:0] _075_;
  wire [3:0] _076_;
  wire [3:0] _077_;
  wire [3:0] _078_;
  wire [3:0] _079_;
  wire [3:0] _080_;
  wire [3:0] _081_;
  wire [3:0] _082_;
  wire [3:0] _083_;
  (* src = "memory_cond.v:22" *)
  input [3:0] address;
  (* src = "memory_cond.v:21" *)
  input clk;
  (* src = "memory_cond.v:23" *)
  input cs;
  (* src = "memory_cond.v:28" *)
  inout [3:0] data;
  (* src = "memory_cond.v:31" *)
  reg [3:0] data_out;
  reg [3:0] \mem[0] ;
  reg [3:0] \mem[10] ;
  reg [3:0] \mem[11] ;
  reg [3:0] \mem[12] ;
  reg [3:0] \mem[13] ;
  reg [3:0] \mem[14] ;
  reg [3:0] \mem[15] ;
  reg [3:0] \mem[1] ;
  reg [3:0] \mem[2] ;
  reg [3:0] \mem[3] ;
  reg [3:0] \mem[4] ;
  reg [3:0] \mem[5] ;
  reg [3:0] \mem[6] ;
  reg [3:0] \mem[7] ;
  reg [3:0] \mem[8] ;
  reg [3:0] \mem[9] ;
  (* src = "memory_cond.v:25" *)
  input oe;
  (* src = "memory_cond.v:24" *)
  input we;
  assign _036_ = ~(* src = "memory_cond.v:54" *) we;
  assign _032_ = cs &(* src = "memory_cond.v:39" *)  oe;
  assign _033_ = _032_ &(* src = "memory_cond.v:39" *)  _036_;
  assign _002_[3] = cs &(* src = "memory_cond.v:45" *)  we;
  assign _034_ = cs &(* src = "memory_cond.v:54" *)  _036_;
  assign _035_ = _034_ &(* src = "memory_cond.v:54" *)  oe;
  assign data[0] = _033_ ? (* src = "memory_cond.v:39" *) data_out[0] : 1'bz;
  assign data[1] = _033_ ? (* src = "memory_cond.v:39" *) data_out[1] : 1'bz;
  assign data[2] = _033_ ? (* src = "memory_cond.v:39" *) data_out[2] : 1'bz;
  assign data[3] = _033_ ? (* src = "memory_cond.v:39" *) data_out[3] : 1'bz;
  assign _001_[0] = _002_[3] ? (* src = "memory_cond.v:45" *) data[0] : 1'bx;
  assign _001_[1] = _002_[3] ? (* src = "memory_cond.v:45" *) data[1] : 1'bx;
  assign _001_[2] = _002_[3] ? (* src = "memory_cond.v:45" *) data[2] : 1'bx;
  assign _001_[3] = _002_[3] ? (* src = "memory_cond.v:45" *) data[3] : 1'bx;
  assign _000_[0] = _002_[3] ? (* src = "memory_cond.v:45" *) address[0] : 1'bx;
  assign _000_[1] = _002_[3] ? (* src = "memory_cond.v:45" *) address[1] : 1'bx;
  assign _000_[2] = _002_[3] ? (* src = "memory_cond.v:45" *) address[2] : 1'bx;
  assign _000_[3] = _002_[3] ? (* src = "memory_cond.v:45" *) address[3] : 1'bx;
  assign _031_[0] = _035_ ? _051_[0] : data_out[0];
  assign _031_[1] = _035_ ? _051_[1] : data_out[1];
  assign _031_[2] = _035_ ? _051_[2] : data_out[2];
  assign _031_[3] = _035_ ? _051_[3] : data_out[3];
  assign _051_[0] = address[3] ? _038_[0] : _037_[0];
  assign _051_[1] = address[3] ? _038_[1] : _037_[1];
  assign _051_[2] = address[3] ? _038_[2] : _037_[2];
  assign _051_[3] = address[3] ? _038_[3] : _037_[3];
  assign _037_[0] = address[2] ? _040_[0] : _039_[0];
  assign _037_[1] = address[2] ? _040_[1] : _039_[1];
  assign _037_[2] = address[2] ? _040_[2] : _039_[2];
  assign _037_[3] = address[2] ? _040_[3] : _039_[3];
  assign _038_[0] = address[2] ? _042_[0] : _041_[0];
  assign _038_[1] = address[2] ? _042_[1] : _041_[1];
  assign _038_[2] = address[2] ? _042_[2] : _041_[2];
  assign _038_[3] = address[2] ? _042_[3] : _041_[3];
  assign _039_[0] = address[1] ? _044_[0] : _043_[0];
  assign _039_[1] = address[1] ? _044_[1] : _043_[1];
  assign _039_[2] = address[1] ? _044_[2] : _043_[2];
  assign _039_[3] = address[1] ? _044_[3] : _043_[3];
  assign _040_[0] = address[1] ? _046_[0] : _045_[0];
  assign _040_[1] = address[1] ? _046_[1] : _045_[1];
  assign _040_[2] = address[1] ? _046_[2] : _045_[2];
  assign _040_[3] = address[1] ? _046_[3] : _045_[3];
  assign _041_[0] = address[1] ? _048_[0] : _047_[0];
  assign _041_[1] = address[1] ? _048_[1] : _047_[1];
  assign _041_[2] = address[1] ? _048_[2] : _047_[2];
  assign _041_[3] = address[1] ? _048_[3] : _047_[3];
  assign _042_[0] = address[1] ? _050_[0] : _049_[0];
  assign _042_[1] = address[1] ? _050_[1] : _049_[1];
  assign _042_[2] = address[1] ? _050_[2] : _049_[2];
  assign _042_[3] = address[1] ? _050_[3] : _049_[3];
  assign _043_[0] = address[0] ? \mem[1] [0] : \mem[0] [0];
  assign _043_[1] = address[0] ? \mem[1] [1] : \mem[0] [1];
  assign _043_[2] = address[0] ? \mem[1] [2] : \mem[0] [2];
  assign _043_[3] = address[0] ? \mem[1] [3] : \mem[0] [3];
  assign _044_[0] = address[0] ? \mem[3] [0] : \mem[2] [0];
  assign _044_[1] = address[0] ? \mem[3] [1] : \mem[2] [1];
  assign _044_[2] = address[0] ? \mem[3] [2] : \mem[2] [2];
  assign _044_[3] = address[0] ? \mem[3] [3] : \mem[2] [3];
  assign _045_[0] = address[0] ? \mem[5] [0] : \mem[4] [0];
  assign _045_[1] = address[0] ? \mem[5] [1] : \mem[4] [1];
  assign _045_[2] = address[0] ? \mem[5] [2] : \mem[4] [2];
  assign _045_[3] = address[0] ? \mem[5] [3] : \mem[4] [3];
  assign _046_[0] = address[0] ? \mem[7] [0] : \mem[6] [0];
  assign _046_[1] = address[0] ? \mem[7] [1] : \mem[6] [1];
  assign _046_[2] = address[0] ? \mem[7] [2] : \mem[6] [2];
  assign _046_[3] = address[0] ? \mem[7] [3] : \mem[6] [3];
  assign _047_[0] = address[0] ? \mem[9] [0] : \mem[8] [0];
  assign _047_[1] = address[0] ? \mem[9] [1] : \mem[8] [1];
  assign _047_[2] = address[0] ? \mem[9] [2] : \mem[8] [2];
  assign _047_[3] = address[0] ? \mem[9] [3] : \mem[8] [3];
  assign _048_[0] = address[0] ? \mem[11] [0] : \mem[10] [0];
  assign _048_[1] = address[0] ? \mem[11] [1] : \mem[10] [1];
  assign _048_[2] = address[0] ? \mem[11] [2] : \mem[10] [2];
  assign _048_[3] = address[0] ? \mem[11] [3] : \mem[10] [3];
  assign _049_[0] = address[0] ? \mem[13] [0] : \mem[12] [0];
  assign _049_[1] = address[0] ? \mem[13] [1] : \mem[12] [1];
  assign _049_[2] = address[0] ? \mem[13] [2] : \mem[12] [2];
  assign _049_[3] = address[0] ? \mem[13] [3] : \mem[12] [3];
  assign _050_[0] = address[0] ? \mem[15] [0] : \mem[14] [0];
  assign _050_[1] = address[0] ? \mem[15] [1] : \mem[14] [1];
  assign _050_[2] = address[0] ? \mem[15] [2] : \mem[14] [2];
  assign _050_[3] = address[0] ? \mem[15] [3] : \mem[14] [3];
  assign _068_[0] = _052_ ? _001_[0] : \mem[0] [0];
  assign _068_[1] = _052_ ? _001_[1] : \mem[0] [1];
  assign _068_[2] = _052_ ? _001_[2] : \mem[0] [2];
  assign _068_[3] = _052_ ? _001_[3] : \mem[0] [3];
  assign _075_[0] = _059_ ? _001_[0] : \mem[1] [0];
  assign _075_[1] = _059_ ? _001_[1] : \mem[1] [1];
  assign _075_[2] = _059_ ? _001_[2] : \mem[1] [2];
  assign _075_[3] = _059_ ? _001_[3] : \mem[1] [3];
  assign _076_[0] = _060_ ? _001_[0] : \mem[2] [0];
  assign _076_[1] = _060_ ? _001_[1] : \mem[2] [1];
  assign _076_[2] = _060_ ? _001_[2] : \mem[2] [2];
  assign _076_[3] = _060_ ? _001_[3] : \mem[2] [3];
  assign _077_[0] = _061_ ? _001_[0] : \mem[3] [0];
  assign _077_[1] = _061_ ? _001_[1] : \mem[3] [1];
  assign _077_[2] = _061_ ? _001_[2] : \mem[3] [2];
  assign _077_[3] = _061_ ? _001_[3] : \mem[3] [3];
  assign _078_[0] = _062_ ? _001_[0] : \mem[4] [0];
  assign _078_[1] = _062_ ? _001_[1] : \mem[4] [1];
  assign _078_[2] = _062_ ? _001_[2] : \mem[4] [2];
  assign _078_[3] = _062_ ? _001_[3] : \mem[4] [3];
  assign _079_[0] = _063_ ? _001_[0] : \mem[5] [0];
  assign _079_[1] = _063_ ? _001_[1] : \mem[5] [1];
  assign _079_[2] = _063_ ? _001_[2] : \mem[5] [2];
  assign _079_[3] = _063_ ? _001_[3] : \mem[5] [3];
  assign _080_[0] = _064_ ? _001_[0] : \mem[6] [0];
  assign _080_[1] = _064_ ? _001_[1] : \mem[6] [1];
  assign _080_[2] = _064_ ? _001_[2] : \mem[6] [2];
  assign _080_[3] = _064_ ? _001_[3] : \mem[6] [3];
  assign _081_[0] = _065_ ? _001_[0] : \mem[7] [0];
  assign _081_[1] = _065_ ? _001_[1] : \mem[7] [1];
  assign _081_[2] = _065_ ? _001_[2] : \mem[7] [2];
  assign _081_[3] = _065_ ? _001_[3] : \mem[7] [3];
  assign _082_[0] = _066_ ? _001_[0] : \mem[8] [0];
  assign _082_[1] = _066_ ? _001_[1] : \mem[8] [1];
  assign _082_[2] = _066_ ? _001_[2] : \mem[8] [2];
  assign _082_[3] = _066_ ? _001_[3] : \mem[8] [3];
  assign _083_[0] = _067_ ? _001_[0] : \mem[9] [0];
  assign _083_[1] = _067_ ? _001_[1] : \mem[9] [1];
  assign _083_[2] = _067_ ? _001_[2] : \mem[9] [2];
  assign _083_[3] = _067_ ? _001_[3] : \mem[9] [3];
  assign _069_[0] = _053_ ? _001_[0] : \mem[10] [0];
  assign _069_[1] = _053_ ? _001_[1] : \mem[10] [1];
  assign _069_[2] = _053_ ? _001_[2] : \mem[10] [2];
  assign _069_[3] = _053_ ? _001_[3] : \mem[10] [3];
  assign _070_[0] = _054_ ? _001_[0] : \mem[11] [0];
  assign _070_[1] = _054_ ? _001_[1] : \mem[11] [1];
  assign _070_[2] = _054_ ? _001_[2] : \mem[11] [2];
  assign _070_[3] = _054_ ? _001_[3] : \mem[11] [3];
  assign _071_[0] = _055_ ? _001_[0] : \mem[12] [0];
  assign _071_[1] = _055_ ? _001_[1] : \mem[12] [1];
  assign _071_[2] = _055_ ? _001_[2] : \mem[12] [2];
  assign _071_[3] = _055_ ? _001_[3] : \mem[12] [3];
  assign _072_[0] = _056_ ? _001_[0] : \mem[13] [0];
  assign _072_[1] = _056_ ? _001_[1] : \mem[13] [1];
  assign _072_[2] = _056_ ? _001_[2] : \mem[13] [2];
  assign _072_[3] = _056_ ? _001_[3] : \mem[13] [3];
  assign _073_[0] = _057_ ? _001_[0] : \mem[14] [0];
  assign _073_[1] = _057_ ? _001_[1] : \mem[14] [1];
  assign _073_[2] = _057_ ? _001_[2] : \mem[14] [2];
  assign _073_[3] = _057_ ? _001_[3] : \mem[14] [3];
  assign _074_[0] = _058_ ? _001_[0] : \mem[15] [0];
  assign _074_[1] = _058_ ? _001_[1] : \mem[15] [1];
  assign _074_[2] = _058_ ? _001_[2] : \mem[15] [2];
  assign _074_[3] = _058_ ? _001_[3] : \mem[15] [3];
  assign _027_ = ~_000_[0];
  assign _028_ = ~_000_[1];
  assign _029_ = ~_000_[2];
  assign _030_ = ~_000_[3];
  always @(posedge clk)
      \mem[4] [0] <= _078_[0];
  always @(posedge clk)
      \mem[4] [1] <= _078_[1];
  always @(posedge clk)
      \mem[4] [2] <= _078_[2];
  always @(posedge clk)
      \mem[4] [3] <= _078_[3];
  always @(posedge clk)
      \mem[7] [0] <= _081_[0];
  always @(posedge clk)
      \mem[7] [1] <= _081_[1];
  always @(posedge clk)
      \mem[7] [2] <= _081_[2];
  always @(posedge clk)
      \mem[7] [3] <= _081_[3];
  always @(posedge clk)
      \mem[6] [0] <= _080_[0];
  always @(posedge clk)
      \mem[6] [1] <= _080_[1];
  always @(posedge clk)
      \mem[6] [2] <= _080_[2];
  always @(posedge clk)
      \mem[6] [3] <= _080_[3];
  always @(posedge clk)
      \mem[5] [0] <= _079_[0];
  always @(posedge clk)
      \mem[5] [1] <= _079_[1];
  always @(posedge clk)
      \mem[5] [2] <= _079_[2];
  always @(posedge clk)
      \mem[5] [3] <= _079_[3];
  always @(posedge clk)
      \mem[0] [0] <= _068_[0];
  always @(posedge clk)
      \mem[0] [1] <= _068_[1];
  always @(posedge clk)
      \mem[0] [2] <= _068_[2];
  always @(posedge clk)
      \mem[0] [3] <= _068_[3];
  always @(posedge clk)
      \mem[1] [0] <= _075_[0];
  always @(posedge clk)
      \mem[1] [1] <= _075_[1];
  always @(posedge clk)
      \mem[1] [2] <= _075_[2];
  always @(posedge clk)
      \mem[1] [3] <= _075_[3];
  always @(posedge clk)
      \mem[3] [0] <= _077_[0];
  always @(posedge clk)
      \mem[3] [1] <= _077_[1];
  always @(posedge clk)
      \mem[3] [2] <= _077_[2];
  always @(posedge clk)
      \mem[3] [3] <= _077_[3];
  always @(posedge clk)
      \mem[2] [0] <= _076_[0];
  always @(posedge clk)
      \mem[2] [1] <= _076_[1];
  always @(posedge clk)
      \mem[2] [2] <= _076_[2];
  always @(posedge clk)
      \mem[2] [3] <= _076_[3];
  always @(posedge clk)
      \mem[8] [0] <= _082_[0];
  always @(posedge clk)
      \mem[8] [1] <= _082_[1];
  always @(posedge clk)
      \mem[8] [2] <= _082_[2];
  always @(posedge clk)
      \mem[8] [3] <= _082_[3];
  always @(posedge clk)
      \mem[9] [0] <= _083_[0];
  always @(posedge clk)
      \mem[9] [1] <= _083_[1];
  always @(posedge clk)
      \mem[9] [2] <= _083_[2];
  always @(posedge clk)
      \mem[9] [3] <= _083_[3];
  always @(posedge clk)
      \mem[10] [0] <= _069_[0];
  always @(posedge clk)
      \mem[10] [1] <= _069_[1];
  always @(posedge clk)
      \mem[10] [2] <= _069_[2];
  always @(posedge clk)
      \mem[10] [3] <= _069_[3];
  always @(posedge clk)
      \mem[11] [0] <= _070_[0];
  always @(posedge clk)
      \mem[11] [1] <= _070_[1];
  always @(posedge clk)
      \mem[11] [2] <= _070_[2];
  always @(posedge clk)
      \mem[11] [3] <= _070_[3];
  always @(posedge clk)
      \mem[12] [0] <= _071_[0];
  always @(posedge clk)
      \mem[12] [1] <= _071_[1];
  always @(posedge clk)
      \mem[12] [2] <= _071_[2];
  always @(posedge clk)
      \mem[12] [3] <= _071_[3];
  always @(posedge clk)
      \mem[13] [0] <= _072_[0];
  always @(posedge clk)
      \mem[13] [1] <= _072_[1];
  always @(posedge clk)
      \mem[13] [2] <= _072_[2];
  always @(posedge clk)
      \mem[13] [3] <= _072_[3];
  always @(posedge clk)
      \mem[14] [0] <= _073_[0];
  always @(posedge clk)
      \mem[14] [1] <= _073_[1];
  always @(posedge clk)
      \mem[14] [2] <= _073_[2];
  always @(posedge clk)
      \mem[14] [3] <= _073_[3];
  always @(posedge clk)
      \mem[15] [0] <= _074_[0];
  always @(posedge clk)
      \mem[15] [1] <= _074_[1];
  always @(posedge clk)
      \mem[15] [2] <= _074_[2];
  always @(posedge clk)
      \mem[15] [3] <= _074_[3];
  always @(posedge clk)
      data_out[0] <= _031_[0];
  always @(posedge clk)
      data_out[1] <= _031_[1];
  always @(posedge clk)
      data_out[2] <= _031_[2];
  always @(posedge clk)
      data_out[3] <= _031_[3];
  assign _003_ = _027_ & _028_;
  assign _004_ = _029_ & _030_;
  assign _005_ = _003_ & _004_;
  assign _052_ = _005_ & _002_[3];
  assign _006_ = _000_[0] & _028_;
  assign _007_ = _006_ & _004_;
  assign _059_ = _007_ & _002_[3];
  assign _008_ = _027_ & _000_[1];
  assign _009_ = _008_ & _004_;
  assign _060_ = _009_ & _002_[3];
  assign _010_ = _000_[0] & _000_[1];
  assign _011_ = _010_ & _004_;
  assign _061_ = _011_ & _002_[3];
  assign _012_ = _000_[2] & _030_;
  assign _013_ = _003_ & _012_;
  assign _062_ = _013_ & _002_[3];
  assign _014_ = _006_ & _012_;
  assign _063_ = _014_ & _002_[3];
  assign _015_ = _008_ & _012_;
  assign _064_ = _015_ & _002_[3];
  assign _016_ = _010_ & _012_;
  assign _065_ = _016_ & _002_[3];
  assign _017_ = _029_ & _000_[3];
  assign _018_ = _003_ & _017_;
  assign _066_ = _018_ & _002_[3];
  assign _019_ = _006_ & _017_;
  assign _067_ = _019_ & _002_[3];
  assign _020_ = _008_ & _017_;
  assign _053_ = _020_ & _002_[3];
  assign _021_ = _010_ & _017_;
  assign _054_ = _021_ & _002_[3];
  assign _022_ = _000_[2] & _000_[3];
  assign _023_ = _003_ & _022_;
  assign _055_ = _023_ & _002_[3];
  assign _024_ = _006_ & _022_;
  assign _056_ = _024_ & _002_[3];
  assign _025_ = _008_ & _022_;
  assign _057_ = _025_ & _002_[3];
  assign _026_ = _010_ & _022_;
  assign _058_ = _026_ & _002_[3];
endmodule
