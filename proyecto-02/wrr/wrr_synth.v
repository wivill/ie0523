/* Generated by Yosys 0.7 (git sha1 UNKNOWN, clang 5.0.1 -march=x86-64 -mtune=generic -O2 -fstack-protector-strong -fno-plt -fPIC -Os) */

module wrr_synth(reset, clk, weight, request_id, grant_id);
  wire [1:0] _000_;
  wire [2:0] _001_;
  wire [1:0] _002_;
  wire [2:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  input clk;
  reg [1:0] current_request_id;
  reg [2:0] current_weight;
  output [1:0] grant_id;
  reg [1:0] grant_id;
  input [1:0] request_id;
  input reset;
  input [2:0] weight;
  reg [2:0] weight_ctr;
  NOT _062_ (
    .A(reset),
    .Y(_004_)
  );
  NOR _063_ (
    .A(weight_ctr[0]),
    .B(current_weight[0]),
    .Y(_005_)
  );
  NOT _064_ (
    .A(current_weight[0]),
    .Y(_006_)
  );
  NOT _065_ (
    .A(weight_ctr[0]),
    .Y(_007_)
  );
  NOR _066_ (
    .A(_007_),
    .B(_006_),
    .Y(_008_)
  );
  NOR _067_ (
    .A(_008_),
    .B(_005_),
    .Y(_009_)
  );
  NOT _068_ (
    .A(current_weight[1]),
    .Y(_010_)
  );
  NOT _069_ (
    .A(weight_ctr[1]),
    .Y(_011_)
  );
  NAND _070_ (
    .A(_011_),
    .B(_010_),
    .Y(_012_)
  );
  NAND _071_ (
    .A(weight_ctr[1]),
    .B(current_weight[1]),
    .Y(_013_)
  );
  NAND _072_ (
    .A(_013_),
    .B(_012_),
    .Y(_014_)
  );
  NOT _073_ (
    .A(current_weight[2]),
    .Y(_015_)
  );
  NOT _074_ (
    .A(weight_ctr[2]),
    .Y(_016_)
  );
  NAND _075_ (
    .A(_016_),
    .B(_015_),
    .Y(_017_)
  );
  NAND _076_ (
    .A(weight_ctr[2]),
    .B(current_weight[2]),
    .Y(_018_)
  );
  NAND _077_ (
    .A(_018_),
    .B(_017_),
    .Y(_019_)
  );
  NAND _078_ (
    .A(_019_),
    .B(_014_),
    .Y(_020_)
  );
  NOR _079_ (
    .A(_020_),
    .B(_009_),
    .Y(_021_)
  );
  NOR _080_ (
    .A(_021_),
    .B(_004_),
    .Y(_022_)
  );
  NAND _081_ (
    .A(_022_),
    .B(weight_ctr[0]),
    .Y(_003_[0])
  );
  NOR _082_ (
    .A(_011_),
    .B(_007_),
    .Y(_023_)
  );
  NOT _083_ (
    .A(_023_),
    .Y(_024_)
  );
  NAND _084_ (
    .A(_011_),
    .B(_007_),
    .Y(_025_)
  );
  NAND _085_ (
    .A(_025_),
    .B(_024_),
    .Y(_026_)
  );
  NAND _086_ (
    .A(_026_),
    .B(_022_),
    .Y(_003_[1])
  );
  NOR _087_ (
    .A(_023_),
    .B(_016_),
    .Y(_027_)
  );
  NOR _088_ (
    .A(_024_),
    .B(weight_ctr[2]),
    .Y(_028_)
  );
  NOR _089_ (
    .A(_028_),
    .B(_027_),
    .Y(_029_)
  );
  NAND _090_ (
    .A(_029_),
    .B(_022_),
    .Y(_003_[2])
  );
  NOT _091_ (
    .A(request_id[0]),
    .Y(_030_)
  );
  NOR _092_ (
    .A(weight_ctr[2]),
    .B(current_weight[2]),
    .Y(_031_)
  );
  NOR _093_ (
    .A(_016_),
    .B(_015_),
    .Y(_032_)
  );
  NOR _094_ (
    .A(_032_),
    .B(_031_),
    .Y(_033_)
  );
  NOR _095_ (
    .A(_033_),
    .B(_009_),
    .Y(_034_)
  );
  NAND _096_ (
    .A(_034_),
    .B(_014_),
    .Y(_035_)
  );
  NOR _097_ (
    .A(_035_),
    .B(_030_),
    .Y(_036_)
  );
  NOT _098_ (
    .A(current_request_id[0]),
    .Y(_037_)
  );
  NOR _099_ (
    .A(_021_),
    .B(_037_),
    .Y(_038_)
  );
  NOR _100_ (
    .A(_038_),
    .B(_036_),
    .Y(_039_)
  );
  NOR _101_ (
    .A(_039_),
    .B(_004_),
    .Y(_000_[0])
  );
  NOT _102_ (
    .A(request_id[1]),
    .Y(_040_)
  );
  NOR _103_ (
    .A(_035_),
    .B(_040_),
    .Y(_041_)
  );
  NOT _104_ (
    .A(current_request_id[1]),
    .Y(_042_)
  );
  NOR _105_ (
    .A(_021_),
    .B(_042_),
    .Y(_043_)
  );
  NOR _106_ (
    .A(_043_),
    .B(_041_),
    .Y(_044_)
  );
  NOR _107_ (
    .A(_044_),
    .B(_004_),
    .Y(_000_[1])
  );
  NOT _108_ (
    .A(grant_id[0]),
    .Y(_045_)
  );
  NOR _109_ (
    .A(_035_),
    .B(_045_),
    .Y(_046_)
  );
  NOR _110_ (
    .A(_046_),
    .B(_038_),
    .Y(_047_)
  );
  NOR _111_ (
    .A(_047_),
    .B(_004_),
    .Y(_002_[0])
  );
  NOT _112_ (
    .A(grant_id[1]),
    .Y(_048_)
  );
  NOR _113_ (
    .A(_035_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _114_ (
    .A(_049_),
    .B(_043_),
    .Y(_050_)
  );
  NOR _115_ (
    .A(_050_),
    .B(_004_),
    .Y(_002_[1])
  );
  NAND _116_ (
    .A(_021_),
    .B(weight[0]),
    .Y(_051_)
  );
  NOR _117_ (
    .A(_021_),
    .B(_006_),
    .Y(_052_)
  );
  NOR _118_ (
    .A(_052_),
    .B(_004_),
    .Y(_053_)
  );
  NAND _119_ (
    .A(_053_),
    .B(_051_),
    .Y(_001_[0])
  );
  NOT _120_ (
    .A(weight[1]),
    .Y(_054_)
  );
  NOR _121_ (
    .A(_035_),
    .B(_054_),
    .Y(_055_)
  );
  NOR _122_ (
    .A(_021_),
    .B(_010_),
    .Y(_056_)
  );
  NOR _123_ (
    .A(_056_),
    .B(_055_),
    .Y(_057_)
  );
  NOR _124_ (
    .A(_057_),
    .B(_004_),
    .Y(_001_[1])
  );
  NOT _125_ (
    .A(weight[2]),
    .Y(_058_)
  );
  NOR _126_ (
    .A(_035_),
    .B(_058_),
    .Y(_059_)
  );
  NOR _127_ (
    .A(_021_),
    .B(_015_),
    .Y(_060_)
  );
  NOR _128_ (
    .A(_060_),
    .B(_059_),
    .Y(_061_)
  );
  NOR _129_ (
    .A(_061_),
    .B(_004_),
    .Y(_001_[2])
  );
  always @(posedge clk)
      grant_id[0] <= _002_[0];
  always @(posedge clk)
      grant_id[1] <= _002_[1];
  always @(posedge clk)
      current_request_id[0] <= _000_[0];
  always @(posedge clk)
      current_request_id[1] <= _000_[1];
  always @(posedge clk)
      weight_ctr[0] <= _003_[0];
  always @(posedge clk)
      weight_ctr[1] <= _003_[1];
  always @(posedge clk)
      weight_ctr[2] <= _003_[2];
  always @(posedge clk)
      current_weight[0] <= _001_[0];
  always @(posedge clk)
      current_weight[1] <= _001_[1];
  always @(posedge clk)
      current_weight[2] <= _001_[2];
endmodule
