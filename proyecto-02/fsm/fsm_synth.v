/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 5.4.0-6ubuntu1~16.04.4 -O2 -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "fsm_synth.v:1" *)
module fsm_synth(CLK, sReset, sInit, sEmpty, sFull, sPause, sContinue, oInit, oIdle, oError, stbPause, stbContinue, State, nState);
  (* src = "fsm_synth.v:157" *)
  wire [3:0] _000_;
  (* src = "fsm_synth.v:157" *)
  wire [3:0] _001_;
  (* src = "fsm_synth.v:157" *)
  wire _002_;
  (* src = "fsm_synth.v:157" *)
  wire _003_;
  (* src = "fsm_synth.v:157" *)
  wire [3:0] _004_;
  (* src = "fsm_synth.v:147" *)
  wire [7:0] _005_;
  (* src = "fsm_synth.v:157" *)
  wire [3:0] _006_;
  (* src = "fsm_synth.v:157" *)
  wire [3:0] _007_;
  (* src = "fsm_synth.v:37" *)
  wire [7:0] _008_;
  (* src = "fsm_synth.v:37" *)
  wire [7:0] _009_;
  (* src = "fsm_synth.v:37" *)
  wire [7:0] _010_;
  (* src = "fsm_synth.v:37" *)
  wire [7:0] _011_;
  (* src = "fsm_synth.v:37" *)
  wire [7:0] _012_;
  (* src = "fsm_synth.v:37" *)
  wire [7:0] _013_;
  wire _014_;
  wire [1:0] _015_;
  wire [1:0] _016_;
  wire [1:0] _017_;
  wire [1:0] _018_;
  wire [1:0] _019_;
  wire [1:0] _020_;
  wire [3:0] _021_;
  wire [1:0] _022_;
  wire [3:0] _023_;
  wire [1:0] _024_;
  wire [3:0] _025_;
  wire [1:0] _026_;
  wire [3:0] _027_;
  wire [1:0] _028_;
  wire [3:0] _029_;
  wire [1:0] _030_;
  wire _031_;
  wire [3:0] _032_;
  wire [1:0] _033_;
  wire [3:0] _034_;
  wire [1:0] _035_;
  wire [3:0] _036_;
  wire [1:0] _037_;
  wire [3:0] _038_;
  wire [1:0] _039_;
  wire [3:0] _040_;
  wire [1:0] _041_;
  wire [3:0] _042_;
  wire [1:0] _043_;
  wire [3:0] _044_;
  wire [1:0] _045_;
  wire [1:0] _046_;
  wire [1:0] _047_;
  wire [1:0] _048_;
  wire [1:0] _049_;
  wire _050_;
  wire [1:0] _051_;
  wire [1:0] _052_;
  wire [1:0] _053_;
  wire [1:0] _054_;
  wire _055_;
  wire [3:0] _056_;
  wire [3:0] _057_;
  wire [7:0] _058_;
  wire [7:0] _059_;
  wire [7:0] _060_;
  wire [7:0] _061_;
  wire [7:0] _062_;
  wire [7:0] _063_;
  wire [7:0] _064_;
  wire [7:0] _065_;
  wire [7:0] _066_;
  wire [7:0] _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  (* src = "fsm_synth.v:100" *)
  wire _080_;
  (* src = "fsm_synth.v:102" *)
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  (* src = "fsm_synth.v:38|<techmap.v>:432" *)
  wire [39:0] _090_;
  (* src = "fsm_synth.v:38|<techmap.v>:428" *)
  wire [7:0] _091_;
  wire [3:0] _092_;
  wire [3:0] _093_;
  wire [3:0] _094_;
  wire [3:0] _095_;
  wire [3:0] _096_;
  wire [3:0] _097_;
  wire _098_;
  (* src = "fsm_synth.v:100" *)
  wire _099_;
  (* src = "fsm_synth.v:102" *)
  wire _100_;
  (* src = "fsm_synth.v:38|<techmap.v>:445" *)
  wire _101_;
  (* src = "fsm_synth.v:3" *)
  input CLK;
  (* src = "fsm_synth.v:18" *)
  output [7:0] State;
  (* src = "fsm_synth.v:22" *)
  reg [3:0] continuar;
  (* src = "fsm_synth.v:18" *)
  output [7:0] nState;
  (* src = "fsm_synth.v:23" *)
  wire [7:0] nextState;
  (* src = "fsm_synth.v:14" *)
  output [3:0] oError;
  reg [3:0] oError;
  (* src = "fsm_synth.v:13" *)
  output oIdle;
  reg oIdle;
  (* src = "fsm_synth.v:12" *)
  output oInit;
  reg oInit;
  (* src = "fsm_synth.v:22" *)
  reg [3:0] pausa;
  (* src = "fsm_synth.v:9" *)
  input [3:0] sContinue;
  (* src = "fsm_synth.v:6" *)
  input [3:0] sEmpty;
  (* src = "fsm_synth.v:7" *)
  input [3:0] sFull;
  (* src = "fsm_synth.v:5" *)
  input sInit;
  (* src = "fsm_synth.v:8" *)
  input [3:0] sPause;
  (* src = "fsm_synth.v:4" *)
  input sReset;
  (* src = "fsm_synth.v:23" *)
  wire [7:0] state;
  (* src = "fsm_synth.v:16" *)
  output [3:0] stbContinue;
  reg [3:0] stbContinue;
  (* src = "fsm_synth.v:15" *)
  output [3:0] stbPause;
  reg [3:0] stbPause;
  assign _015_[0] = sPause[3] |(* src = "fsm_synth.v:100" *)  sPause[2];
  assign _015_[1] = sPause[1] |(* src = "fsm_synth.v:100" *)  sPause[0];
  assign _099_ = _015_[0] |(* src = "fsm_synth.v:100" *)  _015_[1];
  assign _016_[0] = sContinue[3] |(* src = "fsm_synth.v:102" *)  sContinue[2];
  assign _016_[1] = sContinue[1] |(* src = "fsm_synth.v:102" *)  sContinue[0];
  assign _100_ = _016_[0] |(* src = "fsm_synth.v:102" *)  _016_[1];
  assign _017_[0] = sEmpty[3] &(* src = "fsm_synth.v:198" *)  sEmpty[2];
  assign _017_[1] = sEmpty[1] &(* src = "fsm_synth.v:198" *)  sEmpty[0];
  assign _013_[2] = _017_[0] &(* src = "fsm_synth.v:198" *)  _017_[1];
  assign _018_[0] = _056_[0] |(* src = "fsm_synth.v:210" *)  _056_[1];
  assign _018_[1] = _056_[2] |(* src = "fsm_synth.v:210" *)  _056_[3];
  assign _080_ = _018_[0] |(* src = "fsm_synth.v:210" *)  _018_[1];
  assign _019_[0] = _057_[0] |(* src = "fsm_synth.v:225" *)  _057_[1];
  assign _019_[1] = _057_[2] |(* src = "fsm_synth.v:225" *)  _057_[3];
  assign _081_ = _019_[0] |(* src = "fsm_synth.v:225" *)  _019_[1];
  assign _020_[0] = sFull[3] |(* src = "fsm_synth.v:259" *)  sFull[2];
  assign _020_[1] = sFull[1] |(* src = "fsm_synth.v:259" *)  sFull[0];
  assign _009_[6] = _020_[0] |(* src = "fsm_synth.v:259" *)  _020_[1];
  assign _021_[2] = nextState[4] |(* src = "fsm_synth.v:175" *)  _058_[5];
  assign _022_[1] = _021_[2] |(* src = "fsm_synth.v:175" *)  nextState[6];
  assign _068_ = _022_[0] |(* src = "fsm_synth.v:175" *)  _022_[1];
  assign _023_[2] = _059_[4] |(* src = "fsm_synth.v:175" *)  nextState[5];
  assign _024_[1] = _023_[2] |(* src = "fsm_synth.v:175" *)  nextState[6];
  assign _069_ = _022_[0] |(* src = "fsm_synth.v:175" *)  _024_[1];
  assign _022_[0] = _021_[0] |(* src = "fsm_synth.v:175" *)  _021_[1];
  assign _026_[1] = _025_[2] |(* src = "fsm_synth.v:175" *)  _025_[3];
  assign _070_ = _022_[0] |(* src = "fsm_synth.v:175" *)  _026_[1];
  assign _021_[0] = nextState[0] |(* src = "fsm_synth.v:175" *)  nextState[1];
  assign _027_[1] = _060_[2] |(* src = "fsm_synth.v:175" *)  nextState[3];
  assign _028_[0] = _021_[0] |(* src = "fsm_synth.v:175" *)  _027_[1];
  assign _071_ = _028_[0] |(* src = "fsm_synth.v:175" *)  _028_[1];
  assign _029_[0] = nextState[0] |(* src = "fsm_synth.v:175" *)  _061_[1];
  assign _021_[1] = nextState[2] |(* src = "fsm_synth.v:175" *)  nextState[3];
  assign _025_[2] = nextState[4] |(* src = "fsm_synth.v:175" *)  nextState[5];
  assign _030_[0] = _029_[0] |(* src = "fsm_synth.v:175" *)  _021_[1];
  assign _028_[1] = _025_[2] |(* src = "fsm_synth.v:175" *)  nextState[6];
  assign _072_ = _030_[0] |(* src = "fsm_synth.v:175" *)  _028_[1];
  assign _031_ = _086_ | _085_;
  assign _014_ = _031_ | _084_;
  assign _032_[0] = state[0] |(* src = "fsm_synth.v:38" *)  state[1];
  assign _032_[1] = state[2] |(* src = "fsm_synth.v:38" *)  state[3];
  assign _032_[2] = state[4] |(* src = "fsm_synth.v:38" *)  state[5];
  assign _033_[1] = _032_[2] |(* src = "fsm_synth.v:38" *)  _032_[3];
  assign _073_ = _033_[0] |(* src = "fsm_synth.v:38" *)  _033_[1];
  assign _034_[2] = state[4] |(* src = "fsm_synth.v:38" *)  _062_[5];
  assign _035_[1] = _034_[2] |(* src = "fsm_synth.v:38" *)  state[6];
  assign _074_ = _033_[0] |(* src = "fsm_synth.v:38" *)  _035_[1];
  assign _036_[2] = _063_[4] |(* src = "fsm_synth.v:38" *)  state[5];
  assign _033_[0] = _032_[0] |(* src = "fsm_synth.v:38" *)  _032_[1];
  assign _037_[1] = _036_[2] |(* src = "fsm_synth.v:38" *)  state[6];
  assign _075_ = _033_[0] |(* src = "fsm_synth.v:38" *)  _037_[1];
  assign _038_[1] = state[2] |(* src = "fsm_synth.v:38" *)  _064_[3];
  assign _039_[0] = _032_[0] |(* src = "fsm_synth.v:38" *)  _038_[1];
  assign _076_ = _039_[0] |(* src = "fsm_synth.v:38" *)  _039_[1];
  assign _040_[1] = _065_[2] |(* src = "fsm_synth.v:38" *)  state[3];
  assign _041_[0] = _032_[0] |(* src = "fsm_synth.v:38" *)  _040_[1];
  assign _077_ = _041_[0] |(* src = "fsm_synth.v:38" *)  _039_[1];
  assign _042_[0] = state[0] |(* src = "fsm_synth.v:38" *)  _066_[1];
  assign _043_[0] = _042_[0] |(* src = "fsm_synth.v:38" *)  _032_[1];
  assign _039_[1] = _032_[2] |(* src = "fsm_synth.v:38" *)  state[6];
  assign _078_ = _043_[0] |(* src = "fsm_synth.v:38" *)  _039_[1];
  assign _044_[0] = _067_[0] |(* src = "fsm_synth.v:38" *)  state[1];
  assign _045_[0] = _044_[0] |(* src = "fsm_synth.v:38" *)  _032_[1];
  assign _079_ = _045_[0] |(* src = "fsm_synth.v:38" *)  _039_[1];
  assign _046_[0] = _090_[6] |(* src = "fsm_synth.v:38|<techmap.v>:441" *)  _090_[14];
  assign _050_ = _049_[0] |(* src = "fsm_synth.v:38|<techmap.v>:441" *)  _049_[1];
  assign _051_[1] = _090_[18] |(* src = "fsm_synth.v:38|<techmap.v>:441" *)  _090_[26];
  assign _091_[1] = _052_[1] |(* src = "fsm_synth.v:38|<techmap.v>:441" *)  _090_[33];
  assign _091_[0] = _053_[0] |(* src = "fsm_synth.v:38|<techmap.v>:441" *)  _090_[32];
  assign _054_[0] = _083_ |(* src = "fsm_synth.v:38|<techmap.v>:445" *)  _014_;
  assign _054_[1] = _087_ |(* src = "fsm_synth.v:38|<techmap.v>:445" *)  _088_;
  assign _055_ = _054_[0] |(* src = "fsm_synth.v:38|<techmap.v>:445" *)  _054_[1];
  assign _101_ = _055_ |(* src = "fsm_synth.v:38|<techmap.v>:445" *)  _089_;
  assign _083_ = ~(* src = "fsm_synth.v:38" *) _073_;
  assign _084_ = ~(* src = "fsm_synth.v:38" *) _074_;
  assign _085_ = ~(* src = "fsm_synth.v:38" *) _075_;
  assign _086_ = ~(* src = "fsm_synth.v:38" *) _076_;
  assign _087_ = ~(* src = "fsm_synth.v:38" *) _077_;
  assign _088_ = ~(* src = "fsm_synth.v:38" *) _078_;
  assign _089_ = ~(* src = "fsm_synth.v:38" *) _079_;
  assign _010_[4] = _099_ &(* src = "fsm_synth.v:100" *)  _080_;
  assign _008_[5] = _100_ &(* src = "fsm_synth.v:102" *)  _081_;
  assign _000_[0] = sReset ? (* src = "fsm_synth.v:158" *) sContinue[0] : 1'b0;
  assign _000_[1] = sReset ? (* src = "fsm_synth.v:158" *) sContinue[1] : 1'b0;
  assign _000_[2] = sReset ? (* src = "fsm_synth.v:158" *) sContinue[2] : 1'b0;
  assign _000_[3] = sReset ? (* src = "fsm_synth.v:158" *) sContinue[3] : 1'b0;
  assign _004_[0] = sReset ? (* src = "fsm_synth.v:158" *) sPause[0] : 1'b0;
  assign _004_[1] = sReset ? (* src = "fsm_synth.v:158" *) sPause[1] : 1'b0;
  assign _004_[2] = sReset ? (* src = "fsm_synth.v:158" *) sPause[2] : 1'b0;
  assign _004_[3] = sReset ? (* src = "fsm_synth.v:158" *) sPause[3] : 1'b0;
  assign _092_[0] = _081_ ? (* src = "fsm_synth.v:225" *) sContinue[0] : 1'b0;
  assign _092_[1] = _081_ ? (* src = "fsm_synth.v:225" *) sContinue[1] : 1'b0;
  assign _092_[2] = _081_ ? (* src = "fsm_synth.v:225" *) sContinue[2] : 1'b0;
  assign _092_[3] = _081_ ? (* src = "fsm_synth.v:225" *) sContinue[3] : 1'b0;
  assign _093_[0] = _068_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _092_[0];
  assign _093_[1] = _068_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _092_[1];
  assign _093_[2] = _068_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _092_[2];
  assign _093_[3] = _068_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _092_[3];
  assign _006_[0] = sReset ? (* src = "fsm_synth.v:158" *) _093_[0] : 1'b0;
  assign _006_[1] = sReset ? (* src = "fsm_synth.v:158" *) _093_[1] : 1'b0;
  assign _006_[2] = sReset ? (* src = "fsm_synth.v:158" *) _093_[2] : 1'b0;
  assign _006_[3] = sReset ? (* src = "fsm_synth.v:158" *) _093_[3] : 1'b0;
  assign _094_[0] = _080_ ? (* src = "fsm_synth.v:210" *) sPause[0] : 1'b0;
  assign _094_[1] = _080_ ? (* src = "fsm_synth.v:210" *) sPause[1] : 1'b0;
  assign _094_[2] = _080_ ? (* src = "fsm_synth.v:210" *) sPause[2] : 1'b0;
  assign _094_[3] = _080_ ? (* src = "fsm_synth.v:210" *) sPause[3] : 1'b0;
  assign _095_[0] = _069_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _094_[0];
  assign _095_[1] = _069_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _094_[1];
  assign _095_[2] = _069_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _094_[2];
  assign _095_[3] = _069_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _094_[3];
  assign _007_[0] = sReset ? (* src = "fsm_synth.v:158" *) _095_[0] : 1'b0;
  assign _007_[1] = sReset ? (* src = "fsm_synth.v:158" *) _095_[1] : 1'b0;
  assign _007_[2] = sReset ? (* src = "fsm_synth.v:158" *) _095_[2] : 1'b0;
  assign _007_[3] = sReset ? (* src = "fsm_synth.v:158" *) _095_[3] : 1'b0;
  assign _096_[0] = _009_[6] ? (* src = "fsm_synth.v:259" *) sFull[0] : 1'b0;
  assign _096_[1] = _009_[6] ? (* src = "fsm_synth.v:259" *) sFull[1] : 1'b0;
  assign _096_[2] = _009_[6] ? (* src = "fsm_synth.v:259" *) sFull[2] : 1'b0;
  assign _096_[3] = _009_[6] ? (* src = "fsm_synth.v:259" *) sFull[3] : 1'b0;
  assign _097_[0] = _070_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _096_[0];
  assign _097_[1] = _070_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _096_[1];
  assign _097_[2] = _070_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _096_[2];
  assign _097_[3] = _070_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _096_[3];
  assign _001_[0] = sReset ? (* src = "fsm_synth.v:158" *) _097_[0] : 1'b0;
  assign _001_[1] = sReset ? (* src = "fsm_synth.v:158" *) _097_[1] : 1'b0;
  assign _001_[2] = sReset ? (* src = "fsm_synth.v:158" *) _097_[2] : 1'b0;
  assign _001_[3] = sReset ? (* src = "fsm_synth.v:158" *) _097_[3] : 1'b0;
  assign _098_ = _071_ ? (* src = "fsm_synth.v:175" *) 1'b0 : _013_[2];
  assign _002_ = sReset ? (* src = "fsm_synth.v:158" *) _098_ : 1'b0;
  assign _082_ = _072_ ? (* src = "fsm_synth.v:175" *) 1'b0 : sInit;
  assign _003_ = sReset ? (* src = "fsm_synth.v:158" *) _082_ : 1'b0;
  assign _005_[0] = sReset ? (* src = "fsm_synth.v:148" *) nextState[0] : 1'b1;
  assign _005_[1] = sReset ? (* src = "fsm_synth.v:148" *) nextState[1] : 1'b0;
  assign _005_[2] = sReset ? (* src = "fsm_synth.v:148" *) nextState[2] : 1'b0;
  assign _005_[3] = sReset ? (* src = "fsm_synth.v:148" *) nextState[3] : 1'b0;
  assign _005_[4] = sReset ? (* src = "fsm_synth.v:148" *) nextState[4] : 1'b0;
  assign _005_[5] = sReset ? (* src = "fsm_synth.v:148" *) nextState[5] : 1'b0;
  assign _005_[6] = sReset ? (* src = "fsm_synth.v:148" *) nextState[6] : 1'b0;
  assign _009_[3] = ~(* src = "fsm_synth.v:106" *) _009_[6];
  assign _010_[3] = _010_[4] ? (* src = "fsm_synth.v:100" *) 1'b0 : _008_[3];
  assign _010_[5] = _010_[4] ? (* src = "fsm_synth.v:100" *) 1'b0 : _008_[5];
  assign _010_[6] = _010_[4] ? (* src = "fsm_synth.v:100" *) 1'b0 : _008_[6];
  assign _008_[3] = _008_[5] ? (* src = "fsm_synth.v:74" *) 1'b0 : _009_[3];
  assign _008_[6] = _008_[5] ? (* src = "fsm_synth.v:74" *) 1'b0 : _009_[6];
  assign _013_[3] = ~(* src = "fsm_synth.v:58" *) _013_[2];
  assign _012_[2] = ~(* src = "fsm_synth.v:49" *) sInit;
  assign _011_[0] = ~(* src = "fsm_synth.v:41" *) sReset;
  assign nextState[0] = _101_ ? (* src = "fsm_synth.v:38|<techmap.v>:445" *) _091_[0] : 1'b0;
  assign nextState[1] = _101_ ? (* src = "fsm_synth.v:38|<techmap.v>:445" *) _091_[1] : 1'b1;
  assign nextState[2] = _101_ ? (* src = "fsm_synth.v:38|<techmap.v>:445" *) _051_[1] : 1'b0;
  assign nextState[3] = _101_ ? (* src = "fsm_synth.v:38|<techmap.v>:445" *) _050_ : 1'b0;
  assign nextState[4] = _101_ ? (* src = "fsm_synth.v:38|<techmap.v>:445" *) _048_[0] : 1'b0;
  assign nextState[5] = _101_ ? (* src = "fsm_synth.v:38|<techmap.v>:445" *) _047_[0] : 1'b0;
  assign nextState[6] = _101_ ? (* src = "fsm_synth.v:38|<techmap.v>:445" *) _046_[0] : 1'b0;
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      oInit <= _003_;
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      oIdle <= _002_;
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      oError[0] <= _001_[0];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      oError[1] <= _001_[1];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      oError[2] <= _001_[2];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      oError[3] <= _001_[3];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      stbPause[0] <= _007_[0];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      stbPause[1] <= _007_[1];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      stbPause[2] <= _007_[2];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      stbPause[3] <= _007_[3];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      stbContinue[0] <= _006_[0];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      stbContinue[1] <= _006_[1];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      stbContinue[2] <= _006_[2];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      stbContinue[3] <= _006_[3];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      pausa[0] <= _004_[0];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      pausa[1] <= _004_[1];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      pausa[2] <= _004_[2];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      pausa[3] <= _004_[3];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      continuar[0] <= _000_[0];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      continuar[1] <= _000_[1];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      continuar[2] <= _000_[2];
  (* src = "fsm_synth.v:157" *)
  always @(posedge CLK)
      continuar[3] <= _000_[3];
  reg \state_reg[0] ;
  (* src = "fsm_synth.v:147" *)
  always @(posedge CLK)
      \state_reg[0]  <= _005_[0];
  assign state[0] = \state_reg[0] ;
  reg \state_reg[1] ;
  (* src = "fsm_synth.v:147" *)
  always @(posedge CLK)
      \state_reg[1]  <= _005_[1];
  assign state[1] = \state_reg[1] ;
  reg \state_reg[2] ;
  (* src = "fsm_synth.v:147" *)
  always @(posedge CLK)
      \state_reg[2]  <= _005_[2];
  assign state[2] = \state_reg[2] ;
  reg \state_reg[3] ;
  (* src = "fsm_synth.v:147" *)
  always @(posedge CLK)
      \state_reg[3]  <= _005_[3];
  assign state[3] = \state_reg[3] ;
  reg \state_reg[4] ;
  (* src = "fsm_synth.v:147" *)
  always @(posedge CLK)
      \state_reg[4]  <= _005_[4];
  assign state[4] = \state_reg[4] ;
  reg \state_reg[5] ;
  (* src = "fsm_synth.v:147" *)
  always @(posedge CLK)
      \state_reg[5]  <= _005_[5];
  assign state[5] = \state_reg[5] ;
  reg \state_reg[6] ;
  (* src = "fsm_synth.v:147" *)
  always @(posedge CLK)
      \state_reg[6]  <= _005_[6];
  assign state[6] = \state_reg[6] ;
  assign _056_[0] = sPause[0] ^(* src = "fsm_synth.v:210" *)  pausa[0];
  assign _056_[1] = sPause[1] ^(* src = "fsm_synth.v:210" *)  pausa[1];
  assign _056_[2] = sPause[2] ^(* src = "fsm_synth.v:210" *)  pausa[2];
  assign _056_[3] = sPause[3] ^(* src = "fsm_synth.v:210" *)  pausa[3];
  assign _057_[0] = sContinue[0] ^(* src = "fsm_synth.v:225" *)  continuar[0];
  assign _057_[1] = sContinue[1] ^(* src = "fsm_synth.v:225" *)  continuar[1];
  assign _057_[2] = sContinue[2] ^(* src = "fsm_synth.v:225" *)  continuar[2];
  assign _057_[3] = sContinue[3] ^(* src = "fsm_synth.v:225" *)  continuar[3];
  assign _058_[5] = nextState[5] ^(* src = "fsm_synth.v:175" *)  1'b1;
  assign _059_[4] = nextState[4] ^(* src = "fsm_synth.v:175" *)  1'b1;
  assign _025_[3] = nextState[6] ^(* src = "fsm_synth.v:175" *)  1'b1;
  assign _060_[2] = nextState[2] ^(* src = "fsm_synth.v:175" *)  1'b1;
  assign _061_[1] = nextState[1] ^(* src = "fsm_synth.v:175" *)  1'b1;
  assign _032_[3] = state[6] ^(* src = "fsm_synth.v:38" *)  1'b1;
  assign _062_[5] = state[5] ^(* src = "fsm_synth.v:38" *)  1'b1;
  assign _063_[4] = state[4] ^(* src = "fsm_synth.v:38" *)  1'b1;
  assign _064_[3] = state[3] ^(* src = "fsm_synth.v:38" *)  1'b1;
  assign _065_[2] = state[2] ^(* src = "fsm_synth.v:38" *)  1'b1;
  assign _066_[1] = state[1] ^(* src = "fsm_synth.v:38" *)  1'b1;
  assign _067_[0] = state[0] ^(* src = "fsm_synth.v:38" *)  1'b1;
  assign _090_[32] = _011_[0] &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _089_;
  assign _090_[33] = sReset &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _089_;
  assign _052_[1] = sInit &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _088_;
  assign _090_[26] = _012_[2] &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _088_;
  assign _090_[18] = _013_[2] &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _087_;
  assign _049_[1] = _013_[3] &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _087_;
  assign _049_[0] = _010_[3] &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _014_;
  assign _048_[0] = _010_[4] &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _014_;
  assign _047_[0] = _010_[5] &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _014_;
  assign _090_[14] = _010_[6] &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _014_;
  assign _053_[0] = _011_[0] &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _083_;
  assign _090_[6] = sReset &(* src = "fsm_synth.v:38|<techmap.v>:434" *)  _083_;
  assign State = { 1'b0, state[6:0] };
  assign nState = { 1'b0, nextState[6:0] };
  assign nextState[7] = 1'b0;
  assign state[7] = 1'b0;
endmodule
